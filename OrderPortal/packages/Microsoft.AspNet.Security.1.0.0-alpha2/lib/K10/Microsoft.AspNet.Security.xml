<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Security</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Security.AuthenticationMode">
            <summary>
            Controls the behavior of authentication middleware
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Security.AuthenticationMode.Active">
            <summary>
            In Active mode the authentication middleware will alter the user identity as the request arrives, and
            will also alter a plain 401 as the response leaves.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Security.AuthenticationMode.Passive">
            <summary>
            In Passive mode the authentication middleware will only provide user identity when asked, and will only
            alter 401 responses where the authentication type named in the extra challenge data.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.AuthenticationOptions">
            <summary>
            Base Options for all authentication middleware
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.AuthenticationOptions.#ctor(System.String)">
            <summary>
            Initialize properties of AuthenticationOptions base class
            </summary>
            <param name="authenticationType">Assigned to the AuthenticationType property</param>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthenticationOptions.AuthenticationType">
            <summary>
            The AuthenticationType in the options corresponds to the IIdentity AuthenticationType property. A different
            value may be assigned in order to use the same authentication middleware type more than once in a pipeline.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthenticationOptions.AuthenticationMode">
            <summary>
            If Active the authentication middleware alter the request user coming in and
            alter 401 Unauthorized responses going out. If Passive the authentication middleware will only provide
            identity and alter responses when explicitly indicated by the AuthenticationType.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthenticationOptions.Description">
            <summary>
            Additional information about the authentication type which is made available to the application.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.AuthenticationTicket">
            <summary>
            Contains user identity information as well as additional authentication state.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.AuthenticationTicket.#ctor(System.Security.Claims.ClaimsIdentity,Microsoft.AspNet.Http.Security.AuthenticationProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Security.AuthenticationTicket"/> class
            </summary>
            <param name="identity"></param>
            <param name="properties"></param>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthenticationTicket.Identity">
            <summary>
            Gets the authenticated user identity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthenticationTicket.Properties">
            <summary>
            Additional state values for the authentication session.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.AuthorizationPolicy">
            <summary>
            This class provides a base implementation for <see cref="T:Microsoft.AspNet.Security.IAuthorizationPolicy" />
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.AuthorizationPolicyContext">
            <summary>
            Contains authorization information used by <see cref="T:Microsoft.AspNet.Security.IAuthorizationPolicy"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthorizationPolicyContext.Claims">
            <summary>
            The list of claims the <see cref="T:Microsoft.AspNet.Security.IAuthorizationService"/> is checking.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthorizationPolicyContext.User">
            <summary>
            The user to check the claims against.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthorizationPolicyContext.UserClaims">
            <summary>
            The claims of the user.
            </summary>
            <remarks>
            This list can be modified by policies for retries.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthorizationPolicyContext.Resource">
            <summary>
            An optional resource associated to the check.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthorizationPolicyContext.Authorized">
            <summary>
            Gets or set whether the permission will be granted to the user.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.AuthorizationPolicyContext.Retry">
            <summary>
            When set to <value>true</value>, the authorization check will be processed again.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNet.Security.IAuthorizationService,System.Security.Claims.Claim,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Checks if a user has specific claims.
            </summary>
            <param name="claim">The claim to check against a specific user.</param>
            <param name="user">The user to check claims against.</param>
            <returns><value>true</value> when the user fulfills one of the claims, <value>false</value> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.AuthorizationServiceExtensions.Authorize(Microsoft.AspNet.Security.IAuthorizationService,System.Security.Claims.Claim,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Checks if a user has specific claims.
            </summary>
            <param name="claim">The claim to check against a specific user.</param>
            <param name="user">The user to check claims against.</param>
            <returns><value>true</value> when the user fulfills one of the claims, <value>false</value> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNet.Security.IAuthorizationService,System.Security.Claims.Claim,System.Security.Claims.ClaimsPrincipal,System.Object)">
            <summary>
            Checks if a user has specific claims for a specific context obj.
            </summary>
            <param name="claim">The claim to check against a specific user.</param>
            <param name="user">The user to check claims against.</param>
            <param name="resource">The resource the claims should be check with.</param>
            <returns><value>true</value> when the user fulfills one of the claims, <value>false</value> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.AuthorizationServiceExtensions.Authorize(Microsoft.AspNet.Security.IAuthorizationService,System.Security.Claims.Claim,System.Security.Claims.ClaimsPrincipal,System.Object)">
            <summary>
            Checks if a user has specific claims for a specific context obj.
            </summary>
            <param name="claim">The claimsto check against a specific user.</param>
            <param name="user">The user to check claims against.</param>
            <param name="resource">The resource the claims should be check with.</param>
            <returns><value>true</value> when the user fulfills one of the claims, <value>false</value> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.AuthorizationServiceExtensions.AuthorizeAsync(Microsoft.AspNet.Security.IAuthorizationService,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Checks if a user has specific claims.
            </summary>
            <param name="claims">The claims to check against a specific user.</param>
            <param name="user">The user to check claims against.</param>
            <returns><value>true</value> when the user fulfills one of the claims, <value>false</value> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.AuthorizationServiceExtensions.Authorize(Microsoft.AspNet.Security.IAuthorizationService,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Checks if a user has specific claims.
            </summary>
            <param name="claims">The claims to check against a specific user.</param>
            <param name="user">The user to check claims against.</param>
            <returns><value>true</value> when the user fulfills one of the claims, <value>false</value> otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.Constants">
            <summary>
            String constants used only by the Security assembly
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Security.Constants.DefaultSignInAsAuthenticationType">
            <summary>
            Used by middleware extension methods to coordinate the default value Options property SignInAsAuthenticationType
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.IAuthorizationService">
            <summary>
            Checks claims based permissions for a user.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.IAuthorizationService.AuthorizeAsync(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Security.Claims.ClaimsPrincipal,System.Object)">
            <summary>
            Checks if a user has specific claims for a specific context obj.
            </summary>
            <param name="claims">The claims to check against a specific user.</param>
            <param name="user">The user to check claims against.</param>
            <param name="resource">The resource the claims should be check with.</param>
            <returns><value>true</value> when the user fulfills one of the claims, <value>false</value> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.IAuthorizationService.Authorize(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Security.Claims.ClaimsPrincipal,System.Object)">
            <summary>
            Checks if a user has specific claims for a specific context obj.
            </summary>
            <param name="claims">The claims to check against a specific user.</param>
            <param name="user">The user to check claims against.</param>
            <param name="resource">The resource the claims should be check with.</param>
            <returns><value>true</value> when the user fulfills one of the claims, <value>false</value> otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Resources.Exception_AuthenticationTokenDoesNotProvideSyncMethods">
            <summary>
              Looks up a localized string similar to The AuthenticationTokenProvider&apos;s required synchronous events have not been registered..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Resources.Exception_DefaultDpapiRequiresAppNameKey">
            <summary>
              Looks up a localized string similar to The default data protection provider may only be used when the IAppBuilder.Properties contains an appropriate &apos;host.AppName&apos; key..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Resources.Exception_MissingDefaultSignInAsAuthenticationType">
            <summary>
              Looks up a localized string similar to A default value for SignInAsAuthenticationType was not found in IAppBuilder Properties. This can happen if your authentication middleware are added in the wrong order, or if one is missing..
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Resources.Exception_UnhookAuthenticationStateType">
            <summary>
              Looks up a localized string similar to The state passed to UnhookAuthentication may only be the return value from HookAuthentication..
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.SubjectPublicKeyInfoAlgorithm">
            <summary>
            The algorithm used to generate the subject public key information blob hashes.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler">
            <summary>
            Base class for the per-request work performed by most authentication middleware.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler.TeardownAsync">
            <summary>
            Called once per request after Initialize and Invoke. 
            </summary>
            <returns>async completion</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler.InvokeAsync">
            <summary>
            Called once by common code after initialization. If an authentication middleware responds directly to
            specifically known paths it must override this virtual, compare the request path to it's known paths, 
            provide any response information as appropriate, and true to stop further processing.
            </summary>
            <returns>Returning false will cause the common code to call the next middleware in line. Returning true will
            cause the common code to begin the async completion journey without calling the rest of the middleware
            pipeline.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler.AuthenticateAsync">
            <summary>
            Causes the authentication logic in AuthenticateCore to be performed for the current request 
            at most once and returns the results. Calling Authenticate more than once will always return 
            the original value. 
            
            This method should always be called instead of calling AuthenticateCore directly.
            </summary>
            <returns>The ticket data provided by the authentication logic</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler.AuthenticateCoreAsync">
            <summary>
            The core authentication logic which must be provided by the handler. Will be invoked at most
            once per request. Do not call directly, call the wrapping Authenticate method instead.
            </summary>
            <returns>The ticket data provided by the authentication logic</returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler.ApplyResponseAsync">
            <summary>
            Causes the ApplyResponseCore to be invoked at most once per request. This method will be
            invoked either earlier, when the response headers are sent as a result of a response write or flush,
            or later, as the last step when the original async call to the middleware is returning.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler.ApplyResponseCoreAsync">
            <summary>
            Core method that may be overridden by handler. The default behavior is to call two common response 
            activities, one that deals with sign-in/sign-out concerns, and a second to deal with 401 challenges.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler.ApplyResponseGrantAsync">
            <summary>
            Override this method to dela with sign-in/sign-out concerns, if an authentication scheme in question
            deals with grant/revoke as part of it's request flow. (like setting/deleting cookies)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler.ApplyResponseChallengeAsync">
            <summary>
            Override this method to deal with 401 challenge concerns, if an authentication scheme in question
            deals an authentication interaction as part of it's request flow. (like adding a response header, or
            changing the 401 result to 302 of a login page or external sign-in location.)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler`1">
            <summary>
            Base class for the per-request work performed by most authentication middleware.
            </summary>
            <typeparam name="TOptions">Specifies which type for of AuthenticationOptions property</typeparam>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.AuthenticationHandler`1.Initialize(`0,Microsoft.AspNet.Http.HttpContext)">
            <summary>
            Initialize is called once per request to contextualize this instance with appropriate state.
            </summary>
            <param name="options">The original options passed by the application control behavior</param>
            <param name="context">The utility object to observe the current request and response</param>
            <returns>async completion</returns>
        </member>
        <member name="T:Microsoft.AspNet.Security.Infrastructure.ISystemClock">
            <summary>
            Abstracts the system clock to facilitate testing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Infrastructure.ISystemClock.UtcNow">
            <summary>
            Retrieves the current system time in UTC.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.Infrastructure.SecurityHelper">
            <summary>
            Helper code used when implementing authentication middleware
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.SecurityHelper.AddUserIdentity(Microsoft.AspNet.Http.HttpContext,System.Security.Principal.IIdentity)">
            <summary>
            Add an additional ClaimsIdentity to the ClaimsPrincipal
            </summary>
            <param name="identity"></param>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.SecurityHelper.LookupSignIn(System.Collections.Generic.IList{System.Security.Claims.ClaimsIdentity},System.String,System.Security.Claims.ClaimsIdentity@)">
            <summary>
            Find response sign-in details for a specific authentication middleware
            </summary>
            <param name="authenticationType">The authentication type to look for</param>
        </member>
        <member name="M:Microsoft.AspNet.Security.Infrastructure.SecurityHelper.LookupSignOut(System.Collections.Generic.IList{System.String},System.String,Microsoft.AspNet.Security.AuthenticationMode)">
            <summary>
            Find response sign-out details for a specific authentication middleware
            </summary>
            <param name="authenticationType">The authentication type to look for</param>
            <param name="authenticationMode">The authentication mode the middleware is running under</param>
        </member>
        <member name="T:Microsoft.AspNet.Security.Infrastructure.SystemClock">
            <summary>
            Provides access to the normal system clock.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Infrastructure.SystemClock.UtcNow">
            <summary>
            Retrieves the current system time in UTC.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.Notifications.BaseContext`1">
            <summary>
            Base class used for certain event contexts
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Security.Notifications.EndpointContext`1">
            <summary>
            Base class used for certain event contexts
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.Notifications.EndpointContext`1.#ctor(Microsoft.AspNet.Http.HttpContext,`0)">
            <summary>
            Creates an instance of this context
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Security.Notifications.EndpointContext`1.IsRequestCompleted">
            <summary>
            True if the request should not be processed further by other components.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Security.Notifications.EndpointContext`1.RequestCompleted">
            <summary>
            Prevents the request from being processed further by other components. 
            IsRequestCompleted becomes true after calling.
            </summary>
        </member>
        <member name="M:Microsoft.Win32.NativeMethods.CryptEncodeObject(System.UInt32,System.IntPtr,Microsoft.Win32.NativeMethods.CERT_PUBLIC_KEY_INFO@,System.Byte[],System.UInt32@)">
            <summary>
            Encodes a structure of the type indicated by the value of the lpszStructType parameter.
            </summary>
            <param name="dwCertEncodingType">Type of encoding used.</param>
            <param name="lpszStructType">The high-order word is zero, the low-order word specifies the integer identifier for the type of the specified structure so
            we can use the constants in http://msdn.microsoft.com/en-us/library/windows/desktop/aa378145%28v=vs.85%29.aspx</param>
            <param name="pvStructInfo">A pointer to the structure to be encoded.</param>
            <param name="pbEncoded">A pointer to a buffer to receive the encoded structure. This parameter can be NULL to retrieve the size of this information for memory allocation purposes.</param>
            <param name="pcbEncoded">A pointer to a DWORD variable that contains the size, in bytes, of the buffer pointed to by the pbEncoded parameter.</param>
            <returns></returns>
        </member>
    </members>
</doc>
