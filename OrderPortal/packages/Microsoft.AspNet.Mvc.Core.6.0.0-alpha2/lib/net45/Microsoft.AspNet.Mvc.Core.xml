<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Mvc.Core</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Mvc.AcceptVerbsAttribute">
            <summary>
            Specifies what HTTP methods an action supports.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.AcceptVerbsAttribute" /> class.
            </summary>
            <param name="method">The HTTP method the action supports.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.AcceptVerbsAttribute" /> class.
            </summary>
            <param name="methods">The HTTP methods the action supports.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AcceptVerbsAttribute.HttpMethods">
            <summary>
            Gets the HTTP methods the action supports.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ActionContext.Controller">
            <summary>
            The controller is available only after the controller factory runs.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ActionDescriptorsCollection">
            <summary>
            A cached collection of <see cref="T:Microsoft.AspNet.Mvc.ActionDescriptor" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ActionDescriptorsCollection.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNet.Mvc.ActionDescriptor},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.ActionDescriptorsCollection"/>.
            </summary>
            <param name="items">The result of action discovery</param>
            <param name="version">The unique version of discovered actions.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ActionDescriptorsCollection.Items">
            <summary>
            Returns the cached <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ActionDescriptorsCollection.Version">
            <summary>
            Returns the unique version of the currently cached items.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.DefaultActionDescriptorsCollectionProvider">
            <summary>
            Default implementation for ActionDescriptors.
            This implementation caches the results at first call, and is not responsible for updates.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.DefaultActionDescriptorsCollectionProvider.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.DefaultActionDescriptorsCollectionProvider" /> class.
            </summary>
            <param name="serviceProvider">The application IServiceProvider.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.DefaultActionDescriptorsCollectionProvider.ActionDescriptors">
            <summary>
            Returns a cached collection of <see cref="T:Microsoft.AspNet.Mvc.ActionDescriptor" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.DefaultActionDiscoveryConventions.IsValidActionMethod(System.Reflection.MethodInfo)">
            <summary>
            Determines whether the method is a valid action.
            </summary>
            <param name="method">The <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns>true if the method is a valid action. Otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.IActionDescriptorsCollectionProvider">
             <summary>
             Provides the currently cached collection of <see cref="T:Microsoft.AspNet.Mvc.ActionDescriptor"/>.
             </summary>
             <remarks>
             The default implementation, does not update the cache, it is up to the user
             to create or use an implementation that can update the available actions in
             the application. The implementor is also responsible for updating the
             <see cref="P:Microsoft.AspNet.Mvc.ActionDescriptorsCollection.Version"/> in a thread safe way.
            
             Default consumers of this service, are aware of the version and will recache
             data as appropriate, but rely on the version being unique.
             </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.IActionDescriptorsCollectionProvider.ActionDescriptors">
            <summary>
            Returns the current cached <see cref="T:Microsoft.AspNet.Mvc.ActionDescriptorsCollection"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ReflectedActionExecutor.CastToObject(System.Threading.Tasks.Task)">
            <summary>
            Cast Task to Task of object
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ReflectedActionExecutor.CastToObject``1(System.Threading.Tasks.Task{``0})">
            <summary>
            Cast Task of T to Task of object
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.ReflectedActionInvoker.FilterCursor">
             <summary>
             A one-way cursor for filters.
             </summary>
             <remarks>
             This will iterate the filter collection once per-stage, and skip any filters that don't have
             the one of interfaces that applies to the current stage.
            
             Filters are always executed in the following order, but short circuiting plays a role.
            
             Indentation reflects nesting.
            
             1. Exception Filters
                 2. Authorization Filters
                 3. Action Filters
                    Action
            
             4. Result Filters
                Result
            
             </remarks>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.RouteKeyHandling.RequireKey">
            <summary>
            Requires that the key will be in the route values, and that the content matches.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.RouteKeyHandling.DenyKey">
            <summary>
            Requires that the key will not be in the route values.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.RouteKeyHandling.CatchAll">
            <summary>
            Requires that the key will be in the route values, but ignore the content.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.RouteKeyHandling.AcceptAlways">
            <summary>
            Always accept.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ViewContext.ValidationSummaryMessageElement">
            <summary>
            Element name used to wrap a top-level message generated by
            <see cref="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper)"/> and other overloads.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ViewContext.ValidationMessageElement">
            <summary>
            Element name used to wrap a top-level message generated by
            <see cref="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper,System.String)"/> and other overloads.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ViewDataDictionary.#ctor(Microsoft.AspNet.Mvc.ViewDataDictionary)">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary"/> copy constructor for use when model type does not change.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ViewDataDictionary.#ctor(Microsoft.AspNet.Mvc.ViewDataDictionary,System.Object)">
            <summary>
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary"/> copy constructor for use when model type may change. This avoids
            exceptions a derived class may throw when <see cref="!:SetModel()"/> is called.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.ViewDataDictionary.MetadataProvider">
            <summary>
            Provider for subclasses that need it to override <see cref="P:Microsoft.AspNet.Mvc.ViewDataDictionary.ModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ViewDataDictionary`1.#ctor(Microsoft.AspNet.Mvc.ViewDataDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.ViewDataDictionary`1.#ctor(Microsoft.AspNet.Mvc.ViewDataDictionary,System.Object)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.JsonResult.Indent">
            <summary>
            Gets or sets a value indicating whether to indent elements when writing data.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.AntiForgery">
            <summary>
            Provides access to the anti-forgery system, which provides protection against
            Cross-site Request Forgery (XSRF, also called CSRF) attacks.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.AntiForgery.GetHtml(Microsoft.AspNet.Http.HttpContext)">
            <summary>
            Generates an anti-forgery token for this request. This token can
            be validated by calling the Validate() method.
            </summary>
            <param name="context">The HTTP context associated with the current call.</param>
            <returns>An HTML string corresponding to an &lt;input type="hidden"&gt;
            element. This element should be put inside a &lt;form&gt;.</returns>
            <remarks>
            This method has a side effect:
            A response cookie is set if there is no valid cookie associated with the request.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.AntiForgery.GetTokens(Microsoft.AspNet.Http.HttpContext,System.String)">
            <summary>
            Generates an anti-forgery token pair (cookie and form token) for this request.
            This method is similar to GetHtml(HttpContext context), but this method gives the caller control
            over how to persist the returned values. To validate these tokens, call the
            appropriate overload of Validate.
            </summary>
            <param name="context">The HTTP context associated with the current call.</param>
            <param name="oldCookieToken">The anti-forgery token - if any - that already existed
            for this request. May be null. The anti-forgery system will try to reuse this cookie
            value when generating a matching form token.</param>
            <remarks>
            Unlike the GetHtml(HttpContext context) method, this method has no side effect. The caller
            is responsible for setting the response cookie and injecting the returned
            form token as appropriate.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.AntiForgery.ValidateAsync(Microsoft.AspNet.Http.HttpContext)">
            <summary>
            Validates an anti-forgery token that was supplied for this request.
            The anti-forgery token may be generated by calling GetHtml(HttpContext context).
            </summary>
            <param name="context">The HTTP context associated with the current call.</param>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.AntiForgery.Validate(Microsoft.AspNet.Http.HttpContext,System.String,System.String)">
            <summary>
            Validates an anti-forgery token pair that was generated by the GetTokens method.
            </summary>
            <param name="context">The HTTP context associated with the current call.</param>
            <param name="cookieToken">The token that was supplied in the request cookie.</param>
            <param name="formToken">The token that was supplied in the request form body.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.AntiForgeryOptions">
            <summary>
            Provides programmatic configuration for the anti-forgery token system.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AntiForgeryOptions.CookieName">
            <summary>
            Specifies the name of the cookie that is used by the anti-forgery
            system.
            </summary>
            <remarks>
            If an explicit name is not provided, the system will automatically
            generate a name.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AntiForgeryOptions.FormFieldName">
            <summary>
            Specifies the name of the anti-forgery token field that is used by the anti-forgery system.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AntiForgeryOptions.RequireSSL">
            <summary>
            Specifies whether SSL is required for the anti-forgery system
            to operate. If this setting is 'true' and a non-SSL request
            comes into the system, all anti-forgery APIs will fail.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.AntiForgeryOptions.SuppressXFrameOptionsHeader">
            <summary>
            Specifies whether to suppress the generation of X-Frame-Options header
            which is used to prevent ClickJacking. By default, the X-Frame-Options
            header is generated with the value SAMEORIGIN. If this setting is 'true',
            the X-Frame-Options header will not be generated for the response.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.IAntiForgeryAdditionalDataProvider">
            <summary>
            Allows providing or validating additional custom data for anti-forgery tokens.
            For example, the developer could use this to supply a nonce when the token is
            generated, then he could validate the nonce when the token is validated.
            </summary>
            <remarks>
            The anti-forgery system already embeds the client's username within the
            generated tokens. This interface provides and consumes <em>supplemental</em>
            data. If an incoming anti-forgery token contains supplemental data but no
            additional data provider is configured, the supplemental data will not be
            validated.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.IAntiForgeryAdditionalDataProvider.GetAdditionalData(Microsoft.AspNet.Http.HttpContext)">
            <summary>
            Provides additional data to be stored for the anti-forgery tokens generated
            during this request.
            </summary>
            <param name="context">Information about the current request.</param>
            <returns>Supplemental data to embed within the anti-forgery token.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.IAntiForgeryAdditionalDataProvider.ValidateAdditionalData(Microsoft.AspNet.Http.HttpContext,System.String)">
            <summary>
            Validates additional data that was embedded inside an incoming anti-forgery
            token.
            </summary>
            <param name="context">Information about the current request.</param>
            <param name="additionalData">Supplemental data that was embedded within the token.</param>
            <returns>True if the data is valid; false if the data is invalid.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
             <summary>
             Initializes a fast property helper.
            
             This constructor does not cache the helper. For caching, use GetProperties.
             </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of target instance.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.TypeHelper.ObjectToDictionary(System.Object)">
             <summary>
             Given an object, adds each instance property with a public get method as a key and its
             associated value to a dictionary.
            
             If the object is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then a copy
             is returned.
             </summary>
             <remarks>
             The implementation of PropertyHelper will cache the property accessors per-type. This is
             faster when the the same type is used multiple times with ObjectToDictionary.
             </remarks>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryToken_AdditionalDataCheckFailed">
            <summary>
            The provided anti-forgery token failed a custom data check.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryToken_AdditionalDataCheckFailed">
            <summary>
            The provided anti-forgery token failed a custom data check.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryToken_ClaimUidMismatch">
            <summary>
            The provided anti-forgery token was meant for a different claims-based user than the current user.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryToken_ClaimUidMismatch">
            <summary>
            The provided anti-forgery token was meant for a different claims-based user than the current user.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryToken_CookieMissing">
            <summary>
            The required anti-forgery cookie "{0}" is not present.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryToken_CookieMissing(System.Object)">
            <summary>
            The required anti-forgery cookie "{0}" is not present.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryToken_DeserializationFailed">
            <summary>
            The anti-forgery token could not be decrypted.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryToken_DeserializationFailed">
            <summary>
            The anti-forgery token could not be decrypted.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryToken_FormFieldMissing">
            <summary>
            The required anti-forgery form field "{0}" is not present.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryToken_FormFieldMissing(System.Object)">
            <summary>
            The required anti-forgery form field "{0}" is not present.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryToken_SecurityTokenMismatch">
            <summary>
            The anti-forgery cookie token and form field token do not match.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryToken_SecurityTokenMismatch">
            <summary>
            The anti-forgery cookie token and form field token do not match.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryToken_TokensSwapped">
            <summary>
            Validation of the provided anti-forgery token failed. The cookie "{0}" and the form field "{1}" were swapped.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryToken_TokensSwapped(System.Object,System.Object)">
            <summary>
            Validation of the provided anti-forgery token failed. The cookie "{0}" and the form field "{1}" were swapped.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryToken_UsernameMismatch">
            <summary>
            The provided anti-forgery token was meant for user "{0}", but the current user is "{1}".
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryToken_UsernameMismatch(System.Object,System.Object)">
            <summary>
            The provided anti-forgery token was meant for user "{0}", but the current user is "{1}".
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AntiForgeryWorker_RequireSSL">
            <summary>
            The anti-forgery system has the configuration value AntiForgeryOptions.RequireSsl = true, but the current request is not an SSL request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAntiForgeryWorker_RequireSSL">
            <summary>
            The anti-forgery system has the configuration value AntiForgeryOptions.RequireSsl = true, but the current request is not an SSL request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionExecutor_WrappedTaskInstance">
            <summary>
            The method '{0}' on type '{1}' returned an instance of '{2}'. Make sure to call Unwrap on the returned value to avoid unobserved faulted Task.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionExecutor_WrappedTaskInstance(System.Object,System.Object,System.Object)">
            <summary>
            The method '{0}' on type '{1}' returned an instance of '{2}'. Make sure to call Unwrap on the returned value to avoid unobserved faulted Task.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionExecutor_UnexpectedTaskInstance">
            <summary>
            The method '{0}' on type '{1}' returned a Task instance even though it is not an asynchronous method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionExecutor_UnexpectedTaskInstance(System.Object,System.Object)">
            <summary>
            The method '{0}' on type '{1}' returned a Task instance even though it is not an asynchronous method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ClaimUidExtractor_ClaimNotPresent">
            <summary>
            A claim of type '{0}' was not present on the provided ClaimsIdentity.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatClaimUidExtractor_ClaimNotPresent(System.Object)">
            <summary>
            A claim of type '{0}' was not present on the provided ClaimsIdentity.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.TokenValidator_AuthenticatedUserWithoutUsername">
            <summary>
            The provided identity of type '{0}' is marked IsAuthenticated = true but does not have a value for Name. By default, the anti-forgery system requires that all authenticated identities have a unique Name. If it is not possible to provide a unique Name for this identity, consider extending IAdditionalDataProvider by overriding the DefaultAdditionalDataProvider or a custom type that can provide some form of unique identifier for the current user.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatTokenValidator_AuthenticatedUserWithoutUsername(System.Object)">
            <summary>
            The provided identity of type '{0}' is marked IsAuthenticated = true but does not have a value for Name. By default, the anti-forgery system requires that all authenticated identities have a unique Name. If it is not possible to provide a unique Name for this identity, consider extending IAdditionalDataProvider by overriding the DefaultAdditionalDataProvider or a custom type that can provide some form of unique identifier for the current user.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ReflectedActionFilterEndPoint_UnexpectedActionDescriptor">
            <summary>
            The class ReflectedActionFilterEndPoint only supports ReflectedActionDescriptors.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatReflectedActionFilterEndPoint_UnexpectedActionDescriptor">
            <summary>
            The class ReflectedActionFilterEndPoint only supports ReflectedActionDescriptors.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_AmbiguousTypeMatch">
            <summary>
            The view component name '{0}' matched multiple types: {1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_AmbiguousTypeMatch(System.Object,System.Object)">
            <summary>
            The view component name '{0}' matched multiple types: {1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_AsyncMethod_ShouldReturnTask">
            <summary>
            The async view component method '{0}' should be declared to return Task&lt;T&gt;.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_AsyncMethod_ShouldReturnTask(System.Object)">
            <summary>
            The async view component method '{0}' should be declared to return Task&lt;T&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_MustReturnValue">
            <summary>
            A view component must return a non-null value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_MustReturnValue">
            <summary>
            A view component must return a non-null value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_SyncMethod_ShouldReturnValue">
            <summary>
            The view component method '{0}' should be declared to return a value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_SyncMethod_ShouldReturnValue(System.Object)">
            <summary>
            The view component method '{0}' should be declared to return a value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_CannotFindComponent">
            <summary>
            A view component named '{0}' could not be found.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_CannotFindComponent(System.Object)">
            <summary>
            A view component named '{0}' could not be found.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_IViewComponentFactory_ReturnedNull">
            <summary>
            An invoker could not be created for the view component '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_IViewComponentFactory_ReturnedNull(System.Object)">
            <summary>
            An invoker could not be created for the view component '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_CannotFindMethod">
            <summary>
            Could not find an '{0}' method matching the parameters.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_CannotFindMethod(System.Object)">
            <summary>
            Could not find an '{0}' method matching the parameters.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_CannotFindMethod_WithFallback">
            <summary>
            Could not find an '{0}' or '{1}' method matching the parameters.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_CannotFindMethod_WithFallback(System.Object,System.Object)">
            <summary>
            Could not find an '{0}' or '{1}' method matching the parameters.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewComponent_InvalidReturnValue">
            <summary>
            View components only support returning {0}, {1} or {2}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewComponent_InvalidReturnValue(System.Object,System.Object,System.Object)">
            <summary>
            View components only support returning {0}, {1} or {2}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionContextAccessor_SetValueNotSupported">
            <summary>
            Replacing the action context is not supported.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionContextAccessor_SetValueNotSupported">
            <summary>
            Replacing the action context is not supported.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionInvokerFactory_CouldNotCreateInvoker">
            <summary>
            An action invoker could not be created for action '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionInvokerFactory_CouldNotCreateInvoker(System.Object)">
            <summary>
            An action invoker could not be created for action '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.DefaultControllerFactory_ActionDescriptorMustBeReflected">
            <summary>
            The action descriptor must be of type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatDefaultControllerFactory_ActionDescriptorMustBeReflected(System.Object)">
            <summary>
            The action descriptor must be of type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ArgumentCannotBeNullOrEmpty">
            <summary>
            The value cannot be null or empty.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatArgumentCannotBeNullOrEmpty">
            <summary>
            The value cannot be null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.PropertyOfTypeCannotBeNull">
            <summary>
            The '{0}' property of '{1}' must not be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatPropertyOfTypeCannotBeNull(System.Object,System.Object)">
            <summary>
            The '{0}' property of '{1}' must not be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.TypeMethodMustReturnNotNullValue">
            <summary>
            The '{0}' method of type '{1}' cannot return a null value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatTypeMethodMustReturnNotNullValue(System.Object,System.Object)">
            <summary>
            The '{0}' method of type '{1}' cannot return a null value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionSelector_GetCandidateActionsIsAmbiguous">
            <summary>
            The supplied route values are ambiguous and can select multiple sets of actions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionSelector_GetCandidateActionsIsAmbiguous">
            <summary>
            The supplied route values are ambiguous and can select multiple sets of actions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ArgumentPropertyUnexpectedType">
            <summary>
            Property '{0}' is of type '{1}', but this method requires a value of type '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatArgumentPropertyUnexpectedType(System.Object,System.Object,System.Object)">
            <summary>
            Property '{0}' is of type '{1}', but this method requires a value of type '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Common_PartialViewNotFound">
            <summary>
            The partial view '{0}' was not found or no view engine supports the searched locations. The following locations were searched:{1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatCommon_PartialViewNotFound(System.Object,System.Object)">
            <summary>
            The partial view '{0}' was not found or no view engine supports the searched locations. The following locations were searched:{1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Common_ValueNotValidForProperty">
            <summary>
            The value '{0}' is invalid.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatCommon_ValueNotValidForProperty(System.Object)">
            <summary>
            The value '{0}' is invalid.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Common_TriState_False">
            <summary>
            False
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatCommon_TriState_False">
            <summary>
            False
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Common_TriState_NotSet">
            <summary>
            Not Set
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatCommon_TriState_NotSet">
            <summary>
            Not Set
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Common_TriState_True">
            <summary>
            True
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatCommon_TriState_True">
            <summary>
            True
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.DynamicViewData_ViewDataNull">
            <summary>
            ViewData value must not be null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatDynamicViewData_ViewDataNull">
            <summary>
            ViewData value must not be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ExpressionHelper_InvalidIndexerExpression">
            <summary>
            The expression compiler was unable to evaluate the indexer expression '{0}' because it references the model parameter '{1}' which is unavailable.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatExpressionHelper_InvalidIndexerExpression(System.Object,System.Object)">
            <summary>
            The expression compiler was unable to evaluate the indexer expression '{0}' because it references the model parameter '{1}' which is unavailable.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.HtmlHelper_NullModelMetadata">
            <summary>
            The IModelMetadataProvider was unable to provide metadata for expression '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatHtmlHelper_NullModelMetadata(System.Object)">
            <summary>
            The IModelMetadataProvider was unable to provide metadata for expression '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.HtmlHelper_NotContextualized">
            <summary>
            Must call 'Contextualize' method before using this HtmlHelper instance.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatHtmlHelper_NotContextualized">
            <summary>
            Must call 'Contextualize' method before using this HtmlHelper instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.HtmlHelper_MissingSelectData">
            <summary>
            There is no ViewData item of type '{0}' that has the key '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatHtmlHelper_MissingSelectData(System.Object,System.Object)">
            <summary>
            There is no ViewData item of type '{0}' that has the key '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.HtmlHelper_SelectExpressionNotEnumerable">
            <summary>
            The parameter '{0}' must evaluate to an IEnumerable when multiple selection is allowed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatHtmlHelper_SelectExpressionNotEnumerable(System.Object)">
            <summary>
            The parameter '{0}' must evaluate to an IEnumerable when multiple selection is allowed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.HtmlHelper_WrongSelectDataType">
            <summary>
            The ViewData item that has the key '{0}' is of type '{1}' but must be of type '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatHtmlHelper_WrongSelectDataType(System.Object,System.Object,System.Object)">
            <summary>
            The ViewData item that has the key '{0}' is of type '{1}' but must be of type '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.Templates_TypeMustImplementIEnumerable">
            <summary>
            The '{0}' template was used with an object of type '{1}', which does not implement '{2}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatTemplates_TypeMustImplementIEnumerable(System.Object,System.Object,System.Object)">
            <summary>
            The '{0}' template was used with an object of type '{1}', which does not implement '{2}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.TemplateHelpers_TemplateLimitations">
            <summary>
            Templates can be used only with field access, property access, single-dimension array index, or single-parameter custom indexer expressions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatTemplateHelpers_TemplateLimitations">
            <summary>
            Templates can be used only with field access, property access, single-dimension array index, or single-parameter custom indexer expressions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.TemplateHelpers_NoTemplate">
            <summary>
            Unable to locate an appropriate template for type {0}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatTemplateHelpers_NoTemplate(System.Object)">
            <summary>
            Unable to locate an appropriate template for type {0}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewData_ModelCannotBeNull">
            <summary>
            The model item passed is null, but this ViewDataDictionary instance requires a non-null model item of type '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewData_ModelCannotBeNull(System.Object)">
            <summary>
            The model item passed is null, but this ViewDataDictionary instance requires a non-null model item of type '{0}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewData_WrongTModelType">
            <summary>
            The model item passed into the ViewDataDictionary is of type '{0}', but this ViewDataDictionary instance requires a model item of type '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewData_WrongTModelType(System.Object,System.Object)">
            <summary>
            The model item passed into the ViewDataDictionary is of type '{0}', but this ViewDataDictionary instance requires a model item of type '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.NoRoutesMatched">
            <summary>
            No route matches the supplied values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatNoRoutesMatched">
            <summary>
            No route matches the supplied values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AsyncActionFilter_InvalidShortCircuit">
            <summary>
            If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAsyncActionFilter_InvalidShortCircuit(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AsyncResultFilter_InvalidShortCircuit">
            <summary>
            If an {0} cancels execution by setting the {1} property of {2} to 'true', then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAsyncResultFilter_InvalidShortCircuit(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            If an {0} cancels execution by setting the {1} property of {2} to 'true', then it cannot call the next filter by invoking {3}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewEngine_PartialViewNotFound">
            <summary>
            The partial view '{0}' was not found. The following locations were searched:{1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewEngine_PartialViewNotFound(System.Object,System.Object)">
            <summary>
            The partial view '{0}' was not found. The following locations were searched:{1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ViewEngine_ViewNotFound">
            <summary>
            The view '{0}' was not found. The following locations were searched:{1}.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatViewEngine_ViewNotFound(System.Object,System.Object)">
            <summary>
            The view '{0}' was not found. The following locations were searched:{1}.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AuthorizeAttribute_AuthorizationServiceMustBeDefined">
            <summary>
            Unable to locate an implementation of IAuthorizationService.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAuthorizeAttribute_AuthorizationServiceMustBeDefined">
            <summary>
            Unable to locate an implementation of IAuthorizationService.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.AuthorizeAttribute_OnAuthorizationNotImplemented">
            <summary>
            OnAuthorization is not implemented by this filter, use OnAuthorizationAsync instead.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatAuthorizeAttribute_OnAuthorizationNotImplemented">
            <summary>
            OnAuthorization is not implemented by this filter, use OnAuthorizationAsync instead.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.HtmlHelper_TextAreaParameterOutOfRange">
            <summary>
            The value must be greater than or equal to zero.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatHtmlHelper_TextAreaParameterOutOfRange">
            <summary>
            The value must be greater than or equal to zero.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.FilterFactoryAttribute_TypeMustImplementIFilter">
            <summary>
            The type provided to '{0}' must implement '{1}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatFilterFactoryAttribute_TypeMustImplementIFilter(System.Object,System.Object)">
            <summary>
            The type provided to '{0}' must implement '{1}'.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.UnobtrusiveJavascript_ValidationParameterCannotBeEmpty">
            <summary>
            Validation parameter names in unobtrusive client validation rules cannot be empty. Client rule type: {0}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatUnobtrusiveJavascript_ValidationParameterCannotBeEmpty(System.Object)">
            <summary>
            Validation parameter names in unobtrusive client validation rules cannot be empty. Client rule type: {0}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.UnobtrusiveJavascript_ValidationParameterMustBeLegal">
            <summary>
            Validation parameter names in unobtrusive client validation rules must start with a lowercase letter and consist of only lowercase letters or digits. Validation parameter name: {0}, client rule type: {1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatUnobtrusiveJavascript_ValidationParameterMustBeLegal(System.Object,System.Object)">
            <summary>
            Validation parameter names in unobtrusive client validation rules must start with a lowercase letter and consist of only lowercase letters or digits. Validation parameter name: {0}, client rule type: {1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.UnobtrusiveJavascript_ValidationTypeCannotBeEmpty">
            <summary>
            Validation type names in unobtrusive client validation rules cannot be empty. Client rule type: {0}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatUnobtrusiveJavascript_ValidationTypeCannotBeEmpty(System.Object)">
            <summary>
            Validation type names in unobtrusive client validation rules cannot be empty. Client rule type: {0}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.UnobtrusiveJavascript_ValidationTypeMustBeLegal">
            <summary>
            Validation type names in unobtrusive client validation rules must consist of only lowercase letters. Invalid name: "{0}", client rule type: {1}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatUnobtrusiveJavascript_ValidationTypeMustBeLegal(System.Object,System.Object)">
            <summary>
            Validation type names in unobtrusive client validation rules must consist of only lowercase letters. Invalid name: "{0}", client rule type: {1}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.UnobtrusiveJavascript_ValidationTypeMustBeUnique">
            <summary>
            Validation type names in unobtrusive client validation rules must be unique. The following validation type was seen more than once: {0}
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatUnobtrusiveJavascript_ValidationTypeMustBeUnique(System.Object)">
            <summary>
            Validation type names in unobtrusive client validation rules must be unique. The following validation type was seen more than once: {0}
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Core.Resources.ActionResult_ActionReturnValueCannotBeNull">
            <summary>
            Cannot return null from an action method with a return type of '{0}'.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Core.Resources.FormatActionResult_ActionReturnValueCannotBeNull(System.Object)">
            <summary>
            Cannot return null from an action method with a return type of '{0}'.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Rendering.Html5DateRenderingMode">
            <summary>
            Controls the value-rendering method For HTML5 input elements of types such as date, time, datetime and
            datetime-local.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.Rendering.Html5DateRenderingMode.CurrentCulture">
            <summary>
            Render date and time values according to the current culture's ToString behavior.
            </summary>
        </member>
        <member name="F:Microsoft.AspNet.Mvc.Rendering.Html5DateRenderingMode.Rfc3339">
            <summary>
            Render date and time values as Rfc3339 compliant strings to support HTML5 date and time types of input
            elements.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelperDisplayNameExtensions">
            <summary>
            DisplayName-related extensions for <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> and <see cref="T:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameForModel(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Gets the display name for the current model.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameFor``2(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Gets the display name for the model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1"/> instance that this method extends.</param>
            <param name="expression">An expression that identifies the object that contains the display name.</param>
            <returns>
            The display name for the model.
            </returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelperNameExtensions">
            <summary>
            Name-related extensions for <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> and <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperNameExtensions.NameForModel(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Gets the full HTML field name for the current model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> instance that this method extends.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperNameExtensions.IdForModel(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Gets the full HTML field id for the current model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> instance that this method extends.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperPartialExtensions.PartialAsync(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Renders the partial view with the parent's view data and model to a string.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> instance that this method extends.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents when rendering to the <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> has completed.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperPartialExtensions.PartialAsync(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper,System.String,Microsoft.AspNet.Mvc.ViewDataDictionary)">
            <summary>
            Renders the partial view with the given view data and, implicitly, the given view data's model to a string.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> instance that this method extends.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="viewData">
            The <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary"/> that is provided to the partial view that will be rendered.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents when rendering to the <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> has completed.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperPartialExtensions.PartialAsync(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Renders the partial view with an empty view data and the given model to a string.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> instance that this method extends.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="model">The model to provide to the partial view that will be rendered.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents when rendering to the <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> has completed.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartialAsync(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Renders the partial view with the parent's view data and model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> instance that this method extends.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents when rendering has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartialAsync(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper,System.String,Microsoft.AspNet.Mvc.ViewDataDictionary)">
            <summary>
            Renders the partial view with the given view data and, implicitly, the given view data's model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> instance that this method extends.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="viewData">
            The <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary"/> that is provided to the partial view that will be rendered.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents when rendering has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartialAsync(Microsoft.AspNet.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Renders the partial view with an empty view data and the given model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> instance that this method extends.</param>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="model">The model to provide to the partial view that will be rendered.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents when rendering has completed.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper">
            <summary>
            Base HTML helpers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Html5DateRenderingMode">
            <summary>
            Set this property to <see cref="!:Mvc.Html5DateRenderingMode.Rfc3339"/> to have templated helpers such as
            <see cref="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Editor(System.String,System.String,System.String,System.Object)"/> and <see cref="!:EditorFor"/> render date and time values as RFC 3339 compliant strings.
            By default these helpers render dates and times using the current culture.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.IdAttributeDotReplacement">
            <summary>
            Gets or sets the character that replaces periods in the ID attribute of an element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ViewBag">
            <summary>
            Gets the view bag.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ViewContext">
            <summary>
            Gets the context information about the view.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ViewData">
            <summary>
            Gets the current view data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ActionLink(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor element (a element) that contains a URL path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor element.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="protocol">The protocol for the URL, such as &quot;http&quot; or &quot;https&quot;.</param>
            <param name="hostname">The host name for the URL.</param>
            <param name="fragment">The URL fragment name (the anchor name).</param>
            <param name="routeValues">
            An object that contains the parameters for a route. The parameters are retrieved through reflection by
            examining the properties of the object. This object is typically created using object initializer syntax.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="htmlAttributes">
            An object that contains the HTML attributes to set for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            An anchor element (a element).
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.AntiForgeryToken">
            <summary>
            Generates a hidden form field (anti-forgery token) that is validated when the form is submitted.
            </summary>
            <returns>
            The generated form field (anti-forgery token).
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.BeginForm(System.String,System.String,System.Object,Microsoft.AspNet.Mvc.Rendering.FormMethod,System.Object)" -->
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.CheckBox(System.String,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Render an input element of type "checkbox" with value "true" and an input element of type "hidden" with
            value "false".
            </summary>
            <param name="name">
            Rendered element's name. Also use this name to find value in submitted data or view data. Use view data
            only if value is not in submitted data and <paramref name="value"/> is <c>null</c>.
            </param>
            <param name="isChecked">
            If <c>true</c>, checkbox is initially checked. Ignore if named value is found in submitted data. Finally
            fall back to an existing "checked" value in <paramref name="htmlAttributes"/>.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Display(System.String,System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for each property in the object that is represented by the expression, using the
            specified template, HTML field ID, and additional view data.
            </summary>
            <param name="expression">An expression that identifies the object that contains the properties to display.
            </param>
            <param name="templateName">The name of the template that is used to render the object.</param>
            <param name="htmlFieldName">
            A string that is used to disambiguate the names of HTML input elements that are rendered for properties
            that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous object or dictionary that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary`1"/> instance that is created for the template.
            </param>
            <returns>The HTML markup for each property in the object that is represented by the expression.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.DisplayForModel(System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for each property in the model, using the specified template, an HTML field ID, and
            additional view data.
            </summary>
            <param name="templateName">The name of the template that is used to render the object.</param>
            <param name="htmlFieldName">
            A string that is used to disambiguate the names of HTML input elements that are rendered for properties
            that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous object or dictionary that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary`1"/> instance that is created for the template.
            </param>
            <returns>The HTML markup for each property in the model.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.DisplayName(System.String)">
            <summary>
            Gets the display name.
            </summary>
            <param name="expression">An expression that identifies the object that contains the display name.</param>
            <returns>
            The display name.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.DisplayText(System.String)" -->
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <summary>
            Returns a single-selection HTML {select} element using the specified name of the form field,
            list items, option label, and HTML attributes.
            </summary>
            <param name="name">The name of the form field to return.</param>
            <param name="selectList">A collection of <see href="SelectListItem"/> objects that are used to populate the
            drop-down list.</param>
            <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the {select} element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>An HTML {select} element with an {option} subelement for each item in the list.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Editor(System.String,System.String,System.String,System.Object)">
            <summary>
            Returns an HTML input element for each property in the object that is represented by the expression, using
            the specified template, HTML field ID, and additional view data.
            </summary>
            <param name="expression">An expression that identifies the object that contains the properties to edit.
            </param>
            <param name="templateName">The name of the template that is used to render the object.</param>
            <param name="htmlFieldName">
            A string that is used to disambiguate the names of HTML input elements that are rendered for properties
            that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous object or dictionary that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary`1"/> instance that is created for the template.
            </param>
            <returns>The HTML markup for the input elements for each property in the object that is represented by the
            expression.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Encode(System.Object)">
            <summary>
            Converts the value of the specified object to an HTML-encoded string.
            </summary>
            <param name="value">The object to encode.</param>
            <returns>The HTML-encoded string.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Encode(System.String)">
            <summary>
            Converts the specified string to an HTML-encoded string.
            </summary>
            <param name="value">The string to encode.</param>
            <returns>The HTML-encoded string.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.EndForm" -->
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.FormatValue(System.Object,System.String)">
            <summary>
            Formats the value.
            </summary>
            <param name="value">The value.</param>
            <param name="format">The format string.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.GenerateIdFromName(System.String)">
            <summary>
            Creates an HTML element ID using the specified element name.
            </summary>
            <param name="name">The name of the HTML element.</param>
            <returns>The ID of the HTML element.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Hidden(System.String,System.Object,System.Object)">
            <summary>
            Render an input element of type "hidden".
            </summary>
            <param name="name">
            Rendered element's name. Also use this name to find value in submitted data or view data. Use view data
            only if value is not in submitted data and <paramref name="value"/> is <c>null</c>.
            </param>
            <param name="value">
            If non-<c>null</c>, value to include in the element. Ignore if named value is found in submitted data.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Id(System.String)">
            <summary>
            Gets the Id of the given string.
            </summary>
            <param name="name">The string which identifies the object for which the Id should be returned.</param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the Id.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Label(System.String,System.String,System.Object)">
            <summary>
            Returns an HTML label element and the property name of the property that is represented by the specified
            expression.
            </summary>
            <param name="expression">An expression that identifies the property to display.</param>
            <param name="labelText">The label text.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <returns>
            An HTML label element and the property name of the property that is represented by the expression.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem},System.Object)">
            <summary>
            Returns a multi-selection HTML {select} element using the specified name of the form field,
            list items, and HTML attributes.
            </summary>
            <param name="name">The name of the form field to return.</param>
            <param name="selectList">A collection of <see href="SelectListItem"/> objects that are used to populate the
            drop-down list.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>An HTML {select} element with an {option} subelement for each item in the list.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Name(System.String)">
            <summary>
            Gets the full HTML field name for the given expression <paramref name="name"/>.
            </summary>
            <param name="name">Name of an expression, relative to the current model.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNet.Mvc.ViewDataDictionary)">
            <summary>
            Returns a partial view in string format.
            </summary>
            <param name="partialViewName">The name of the partial view to render and return.</param>
            <param name="model">A model to pass into the partial view.</param>
            <param name="viewData">A <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary"/> to pass into the partial view.</param>
            <returns>A task that represents when rendering of the partial view into a string has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Password(System.String,System.Object,System.Object)">
            <summary>
            Render an input element of type "password".
            </summary>
            <param name="name">
            Rendered element's name. Also use this name to find value in view data. Use view data
            only if value is not in submitted data and <paramref name="value"/> is <c>null</c>.
            </param>
            <param name="value">
            If non-<c>null</c>, value to include in the element.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.RadioButton(System.String,System.Object,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Render an input element of type "radio".
            </summary>
            <param name="name">
            Rendered element's name. Also use this name to find value in submitted data or view data. Use view data
            only if value is not in submitted data and <paramref name="value"/> is <c>null</c>.
            </param>
            <param name="value">
            If non-<c>null</c>, value to include in the element. May be <c>null</c> only if
            <paramref name="isChecked"/> is also <c>null</c>. Also compared to value in submitted data or view data to
            determine <paramref name="isChecked"/> if that parameter is <c>null</c>. Ignore if named value is found in
            submitted data.
            </param>
            <param name="isChecked">
            If <c>true</c>, radio button is initially selected. Ignore if named value is found in submitted data. Fall
            back to comparing <paramref name="value"/> with view data if this parameter is <c>null</c>. Finally
            fall back to an existing "checked" value in <paramref name="htmlAttributes"/>.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Raw(System.String)">
            <summary>
            Wraps HTML markup in an <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/>, which will enable HTML markup to be
            rendered to the output without getting HTML encoded.
            </summary>
            <param name="value">HTML markup string.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Raw(System.Object)">
            <summary>
            Wraps HTML markup from the string representation of an object in an <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/>,
            which will enable HTML markup to be rendered to the output without getting HTML encoded.
            </summary>
            <param name="value">object with string representation as HTML markup.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.RenderPartialAsync(System.String,System.Object,Microsoft.AspNet.Mvc.ViewDataDictionary)">
            <summary>
            Renders a partial view.
            </summary>
            <param name="partialViewName">The name of the partial view to render.</param>
            <param name="model">A model to pass into the partial view.</param>
            <param name="viewData">A <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary"/> to pass into the partial view.</param>
            <returns>A task that represents when rendering has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.RouteLink(System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor element (a element) that contains a URL path to the specified route.
            </summary>
            <param name="linkText">The inner text of the anchor element.</param>
            <param name="routeName">The name of the route.</param>
            <param name="protocol">The protocol for the URL, such as &quot;http&quot; or &quot;https&quot;.</param>
            <param name="hostName">The host name for the URL.</param>
            <param name="fragment">The URL fragment name (the anchor name).</param>
            <param name="routeValues">
            An object that contains the parameters for a route. The parameters are retrieved through reflection by
            examining the properties of the object. This object is typically created using object initializer syntax.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="htmlAttributes">
            An object that contains the HTML attributes to set for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            An anchor element (a element).
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            Render a textarea.
            </summary>
            <param name="name">
            Rendered element's name. Also use this name to find value in submitted data or view data. Use view data
            only if value is not in submitted data and <paramref name="value"/> is <c>null</c>.
            </param>
            <param name="value">
            If non-<c>null</c>, value to include in the element. Ignore if named value is found in submitted data.
            </param>
            <param name="rows">Number of rows in the textarea.</param>
            <param name="columns">Number of columns in the textarea.</param>
            <param name="htmlAttributes">
            <see cref="T:System.Collections.Generic.IDictionary`2"/> containing additional HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.TextBox(System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Render an input element of type "text".
            </summary>
            <param name="name">
            Rendered element's name. Also use this name to find value in submitted data or view data. Use view data
            only if value is not in submitted data and <paramref name="value"/> is <c>null</c>.
            </param>
            <param name="value">
            If non-<c>null</c>, value to include in the element. Ignore if named value is found in submitted data.
            </param>
            <param name="format"></param>
            <param name="htmlAttributes">
            <see cref="T:System.Collections.Generic.IDictionary`2"/> containing additional HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ValidationMessage(System.String,System.String,System.Object,System.String)">
            <summary>
            Returns the validation message if an error exists in the <see cref="!:ModelStateDictionary"/> object.
            </summary>
            <param name="modelName">The name of the property that is being validated.</param>
            <param name="message">The message to be displayed. This will always be visible but client-side
            validation may update the associated CSS class.</param>
            <param name="htmlAttributes"> An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <param name="tag">The tag to wrap the <paramref name="message"/> in the generated HTML.
            Its default value is <see cref="P:Microsoft.AspNet.Mvc.ViewContext.ValidationMessageElement" />.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that contains the validation message</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.ValidationSummary(System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Returns an unordered list (ul element) of validation messages that are in the
            <see cref="!:ModelStateDictionary"/> object.
            </summary>
            <param name="excludePropertyErrors">true to have the summary display model-level errors only, or false to
            have the summary display all errors.</param>
            <param name="message">The message to display with the validation summary.</param>
            <param name="htmlAttributes">A dictionary that contains the HTML attributes for the element.</param>
            <param name="tag">The tag to wrap the <paramref name="message"/> in the generated HTML.
            Its default value is <see cref="P:Microsoft.AspNet.Mvc.ViewContext.ValidationMessageElement" />.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that contains an unordered list (ul element) of validation messages.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper.Value(System.String,System.String)">
            <summary>
            Returns the model value for the given expression <paramref name="name"/>.
            </summary>
            <param name="name">Name of an expression, relative to the current model.</param>
            <param name="format">The optional format string to apply to the value.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1">
            <summary>
            An <see cref="T:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper"/> for Linq expressions.
            </summary>
            <typeparam name="TModel">The <see cref="T:System.Type"/> of the model.</typeparam>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.ViewData">
            <summary>
            Gets the current view data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.CheckBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Object)">
            <summary>
            Render an input element of type "checkbox" with value "true" and an input element of type "hidden" with
            value "false".
            </summary>
            <param name="expression">
            An expression that identifies the object that contains the properties to render.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.DisplayFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for each property in the object that is represented by the specified expression, using
            the template, an HTML field ID, and additional view data.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="expression">An expression that identifies the object that contains the properties to display.
            </param>
            <param name="templateName">The name of the template that is used to render the object.</param>
            <param name="htmlFieldName">
            A string that is used to disambiguate the names of HTML input elements that are rendered for properties
            that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous object or dictionary that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary`1"/> instance that is created for the template.
            </param>
            <returns>The HTML markup for each property in the object that is represented by the expression.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.DisplayNameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Gets the display name for the model.
            </summary>
            <param name="expression">An expression that identifies the object that contains the display name.</param>
            <typeparam name="TValue">The type of the value.</typeparam>
            <returns>
            The display name for the model.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.DisplayNameForInnerType``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Gets the display name for the inner model if the current model represents a collection.
            </summary>
            <typeparam name="TInnerModel">The type of the inner model</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="expression">An expression that identifies the object that contains the display name.</param>
            <returns>The display name for the inner model.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.DisplayTextFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Returns the HtmlString corresponding to the expression specified.
            </summary>
            <param name="expression">
            The expression identifies the object for which the HtmlString should be returned.
            </param>
            <returns>
            New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the display text. If the value is null,
            then it returns the ModelMetadata.NullDisplayText.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.DropDownListFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <summary>
            Returns a single-selection HTML {select} element for the object that is represented
            by the specified expression using the specified list items, option label, and HTML attributes.
            </summary>
            <typeparam name="TProperty">The type of the value.</typeparam>
            <param name="expression">An expression that identifies the value to display.</param>
            <param name="selectList">A collection of <see href="SelectListItem"/> objects that are used to populate the
            drop-down list.</param>
            <param name="optionLabel">The text for a default empty item. This parameter can be null.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the {select} element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>An HTML {select} element with an {option} subelement for each item in the list.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.EditorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)">
            <summary>
            Returns an HTML input element for each property in the object that is represented by the specified
            expression, using the specified template, an HTML field ID, and additional view data.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="expression">An expression that identifies the object that contains the properties to edit.
            </param>
            <param name="templateName">The name of the template that is used to render the object.</param>
            <param name="htmlFieldName">
            A string that is used to disambiguate the names of HTML input elements that are rendered for properties
            that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous object or dictionary that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary`1"/> instance that is created for the template.
            </param>
            <returns>The HTML markup for the input elements for each property in the object that is represented by the
            expression.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.HiddenFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            Render an input element of type "hidden".
            </summary>
            <param name="expression">
            An expression that identifies the object that contains the properties to render.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.IdFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Gets the Id of the given expression.
            </summary>
            <param name="expression">The expression identifies the object for which the Id should be returned.</param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the Id.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.LabelFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object)">
            <summary>
            Returns an HTML label element and the property name of the property that is represented by the specified
            expression.
            </summary>
            <param name="expression">An expression that identifies the property to display.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.</param>
            <typeparam name="TValue">The type of the value.</typeparam>
            <returns>
            An HTML label element and the property name of the property that is represented by the expression.
            </returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.ListBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem},System.Object)">
            <summary>
            Returns a multi-selection HTML {select} element for the object that is represented by the specified
            expression using the specified list items and HTML attributes.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="expression">An expression that identifies the object that contains the properties to
            display.</param>
            <param name="selectList">A collection of <see href="SelectListItem"/> objects that are used to populate the
            drop-down list.</param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>An HTML {select} element with an {option} subelement for each item in the list.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Gets the full HTML field name for the given <paramref name="expression"/>.
            </summary>
            <typeparam name="TProperty">The <see cref="T:System.Type"/> the <paramref name="expression"/> returns.</typeparam>
            <param name="expression">An expression, relative to the current model.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.PasswordFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            Render an input element of type "password".
            </summary>
            <param name="expression">
            An expression that identifies the object that contains the properties to render.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.RadioButtonFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object,System.Object)">
            <summary>
            Render an input element of type "radio".
            </summary>
            <param name="expression">
            An expression that identifies the object that contains the properties to render.
            </param>
            <param name="value">
            If non-<c>null</c>, value to compare with current expression value to determine whether radio button is
            checked.
            </param>
            <param name="htmlAttributes">An object that contains the HTML attributes to set for the element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.TextAreaFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32,System.Int32,System.Object)">
            <summary>
            Render a textarea.
            </summary>
            <param name="expression">An expression, relative to the current model.</param>
            <param name="rows">Number of rows in the textarea.</param>
            <param name="columns">Number of columns in the textarea.</param>
            <param name="htmlAttributes">
            <see cref="T:System.Collections.Generic.IDictionary`2"/> containing additional HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.TextBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Render an input element of type "text".
            </summary>
            <param name="expression">
            An expression that identifies the object that contains the properties to render.
            </param>
            <param name="format"></param>
            <param name="htmlAttributes">
            <see cref="T:System.Collections.Generic.IDictionary`2"/> containing additional HTML attributes.
            </param>
            <returns>New <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> containing the rendered HTML.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.ValidationMessageFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object,System.String)">
            <summary>
            Returns the validation message for the specified expression
            </summary>
            <param name="expression">An expression, relative to the current model.</param>
            <param name="message">The message to be displayed. This will always be visible but client-side
            validation may update the associated CSS class.</param>
            <param name="htmlAttributes"> An object that contains the HTML attributes to set for the element.
            Alternatively, an /// <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <param name="tag">The tag to wrap the <paramref name="message"/> in the generated HTML.
            Its default value is <see cref="P:Microsoft.AspNet.Mvc.ViewContext.ValidationMessageElement" />.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that contains the validation message</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.IHtmlHelper`1.ValueFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            Returns the model value for the given expression <paramref name="expression"/>.
            </summary>
            <param name="expression">An expression, relative to the current model.</param>
            <param name="format">The optional format string to apply to the value.</param>
            <returns>An <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlString"/> that represents HTML markup.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable,System.String)">
            <summary>
            Initializes a new instance of the MultiSelectList class by using the items to include in the list,
            the data value field, the data text field, the selected values, and the data group field.
            </summary>
            <param name="items">The items used to build each <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/> of the list.</param>
            <param name="dataValueField">The data value field. Used to match the Value property of the corresponding
            <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="dataTextField">The data text field. Used to match the Text property of the corresponding
            <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="selectedValues">The selected values field. Used to match the Selected property of the
            corresponding <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="dataGroupField">The data group field. Used to match the Group property of the corresponding
            <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/>.</param>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.MultiSelectList.DataGroupField">
            <summary>
            Gets or sets the data group field.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.AspNet.Mvc.Rendering.MvcForm.EndForm" -->
        <member name="M:Microsoft.AspNet.Mvc.Rendering.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the SelectList class by using the specified items for the list,
            the data value field, the data text field, a selected value, and the data group field.
            </summary>
            <param name="items">The items used to build each <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/> of the list.</param>
            <param name="dataValueField">The data value field. Used to match the Value property of the corresponding
            <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="dataTextField">The data text field. Used to match the Text property of the corresponding
            <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="selectedValue">The selected values. Used to match the Selected property of the corresponding
            <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="dataGroupField">The data group field. Used to match the Group property of the corresponding
            <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/>.</param>
        </member>
        <member name="T:Microsoft.AspNet.Mvc.Rendering.SelectListGroup">
            <summary>
            Represents the optgroup HTML element and its attributes.
            In a select list, multiple groups with the same name are supported.
            They are compared with reference equality.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.SelectListGroup.Disabled">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListGroup"/> is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.SelectListGroup.Name">
            <summary>
            Represents the value of the optgroup's label.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.SelectListItem.Disabled">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:Microsoft.AspNet.Mvc.Rendering.SelectListItem"/> is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.SelectListItem.Group">
            <summary>
            Represents the optgroup HTML element this item is wrapped into.
            In a select list, multiple groups with the same name are supported.
            They are compared with reference equality.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.Expressions.ViewDataInfo.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.Rendering.Expressions.ViewDataInfo"/> class with info about a
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary"/> lookup which has already been evaluated.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.Expressions.ViewDataInfo.#ctor(System.Object,System.Reflection.PropertyInfo,System.Func{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.Rendering.Expressions.ViewDataInfo"/> class with info about a
            <see cref="T:Microsoft.AspNet.Mvc.ViewDataDictionary"/> lookup which is evaluated when <see cref="P:Microsoft.AspNet.Mvc.Rendering.Expressions.ViewDataInfo.Value"/> is read.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper" -->
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.#ctor(Microsoft.AspNet.Mvc.Rendering.IViewEngine,Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNet.Mvc.IUrlHelper,Microsoft.AspNet.Mvc.AntiForgery,Microsoft.AspNet.Mvc.IActionBindingContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Html5DateRenderingMode">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.IdAttributeDotReplacement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.ViewContext">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.ViewBag">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.ViewData">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.ActionLink(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.ObjectToDictionary(System.Object)">
             <summary>
             Creates a dictionary from an object, by adding each public instance property as a key with its associated
             value to the dictionary. It will expose public properties from derived types as well. This is typically
             used with objects of an anonymous type.
            
             If the object is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then it is
             returned as-is.
             </summary>
             <example>
             <c>new { property_name = "value" }</c> will translate to the entry <c>{ "property_name" , "value" }</c>
             in the resulting dictionary.
             </example>
             <param name="obj">The object to be converted.</param>
             <returns>The created dictionary of property names and property values.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
             <summary>
             Creates a dictionary of HTML attributes from the input object,
             translating underscores to dashes in each public instance property.
            
             If the object is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then it is
             returned as-is.
             <example>
             new { data_name="value" } will translate to the entry { "data-name" , "value" }
             in the resulting dictionary.
             </example>
             </summary>
             <param name="htmlAttributes">Anonymous object describing HTML attributes.</param>
             <returns>A dictionary that represents HTML attributes.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.AntiForgeryToken">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.BeginForm(System.String,System.String,System.Object,Microsoft.AspNet.Mvc.Rendering.FormMethod,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.EndForm">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.CheckBox(System.String,System.Nullable{System.Boolean},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Encode(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Encode(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.FormatValue(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.GenerateIdFromName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Display(System.String,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.DisplayForModel(System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.DisplayName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.DisplayText(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Editor(System.String,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Hidden(System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Id(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Label(System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Name(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNet.Mvc.ViewDataDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.RenderPartialAsync(System.String,System.Object,Microsoft.AspNet.Mvc.ViewDataDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Password(System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.RadioButton(System.String,System.Object,System.Nullable{System.Boolean},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Raw(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Raw(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.RouteLink(System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.ValidationMessage(System.String,System.String,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.ValidationSummary(System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.GetFormMethodString(Microsoft.AspNet.Mvc.Rendering.FormMethod)">
            <summary>
            Returns the HTTP method that handles form input (GET or POST) as a string.
            </summary>
            <param name="method">The HTTP method that handles the form.</param>
            <returns>The form method string, either "get" or "post".</returns>
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.TextBox(System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.Value(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.CreateForm">
            <summary>
            Override this method to return an <see cref="T:Microsoft.AspNet.Mvc.Rendering.MvcForm"/> subclass. That subclass may change
            <see cref="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.EndForm"/> behavior.
            </summary>
            <returns>A new <see cref="T:Microsoft.AspNet.Mvc.Rendering.MvcForm"/> instance.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper.GenerateForm(System.String,System.String,System.Object,Microsoft.AspNet.Mvc.Rendering.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})" -->
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.#ctor(Microsoft.AspNet.Mvc.Rendering.IViewEngine,Microsoft.AspNet.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNet.Mvc.IUrlHelper,Microsoft.AspNet.Mvc.AntiForgery,Microsoft.AspNet.Mvc.IActionBindingContextProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.ViewData">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.CheckBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.DropDownListFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.DisplayFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.DisplayNameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.DisplayNameForInnerType``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.DisplayTextFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.EditorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.HiddenFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.IdFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.LabelFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.ListBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{Microsoft.AspNet.Mvc.Rendering.SelectListItem},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.PasswordFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.RadioButtonFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.TextAreaFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32,System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.TextBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.ValidationMessageFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNet.Mvc.Rendering.HtmlHelper`1.ValueFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNet.Mvc.JsonViewComponentResult.Indent">
            <summary>
            Gets or sets a value indicating whether to indent elements when writing data.
            </summary>
        </member>
    </members>
</doc>
