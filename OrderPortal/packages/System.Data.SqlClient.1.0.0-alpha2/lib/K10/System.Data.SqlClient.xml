<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.SqlClient</name>
    </assembly>
    <members>
        <member name="T:BidMethodAttribute">
            <summary>
            This attribute is used by FxCopBid rule to mark methods that accept format string and list of arguments that match it
            FxCopBid rule uses this attribute to check if the method needs to be included in checks and to read type mappings
            between the argument type to printf Type spec.
            
            If you need to rename/remove the attribute or change its properties, make sure to update the FxCopBid rule!
            </summary>
        </member>
        <member name="M:BidMethodAttribute.#ctor">
            <summary>
            enabled by default
            </summary>
        </member>
        <member name="P:BidMethodAttribute.Enabled">
            <summary>
            if Enabled is true, FxCopBid rule will validate all calls to this method and require that it will have string argument;
            otherwise, this method is ignored.
            </summary>
        </member>
        <member name="T:BidArgumentTypeAttribute">
            <summary>
            This attribute is used by FxCopBid rule to tell FXCOP the 'real' type sent to the native trace call for this argument. For
            example, if Bid.Trace accepts enumeration value, but marshals it as string to the native trace method, set this attribute
            on the argument and set ArgumentType = typeof(string)
            
            It can be applied on a parameter, to let FxCopBid rule know the format spec type used for the argument, or it can be applied on a method,
            to insert additional format spec arguments at specific location.
            
            If you need to rename/remove the attribute or change its properties, make sure to update the FxCopBid rule!
            </summary>
        </member>
        <member name="F:System.Data.AcceptRejectRule.None">
            <devdoc>
               <para>
                  No action occurs.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.AcceptRejectRule.Cascade">
            <devdoc>
               <para>
                  Changes are cascaded across the relationship.
               </para>
            </devdoc>
        </member>
        <member name="T:System.Data.AggregateType">
            <devdoc>
               <para>Specifies the aggregate function type.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.None">
            <devdoc>
               <para>None.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.Sum">
            <devdoc>
               <para>Sum.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.Mean">
            <devdoc>
               <para>Average value of the aggregate set.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.Min">
            <devdoc>
               <para>The minimum value of the set.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.Max">
            <devdoc>
               <para>The maximum value of the set.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.First">
            <devdoc>
               <para>First element of the set.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.Count">
            <devdoc>
               <para>The count of the set.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.Var">
            <devdoc>
               <para>Variance.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.AggregateType.StDev">
            <devdoc>
               <para>Standard deviation.</para>
            </devdoc>
        </member>
        <member name="T:System.Data.InternalDataCollectionBase">
            <devdoc>
               <para>Provides the base functionality for creating collections.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.InternalDataCollectionBase.Count">
            <devdoc>
               <para>Gets the total number of elements in a collection.</para>
            </devdoc>
        </member>
        <member name="T:System.Data.Common.ActivityCorrelator">
            <summary>
            This class defines the data strucutre for ActvitiyId used for correlated tracing between client (bid trace event) and server (XEvent).
            It also includes all the APIs used to access the ActivityId. Note: ActivityId is thread based which is stored in TLS.
            </summary>
        </member>
        <member name="P:System.Data.Common.ActivityCorrelator.Current">
            <summary>
            Get the current ActivityId
            </summary>
        </member>
        <member name="M:System.Data.Common.ActivityCorrelator.Next">
            <summary>
            Increment the sequence number and generate the new ActviityId
            </summary>
            <returns>ActivityId</returns>
        </member>
        <member name="M:System.Data.Common.DbConnectionStringBuilderUtil.ConvertToApplicationIntent(System.String,System.Object)">
            <summary>
            This method attempts to convert the given value tp ApplicationIntent enum. The algorithm is:
            * if the value is from type string, it will be matched against ApplicationIntent enum names only, using ordinal, case-insensitive comparer
            * if the value is from type ApplicationIntent, it will be used as is
            * if the value is from integral type (SByte, Int16, Int32, Int64, Byte, UInt16, UInt32, or UInt64), it will be converted to enum
            * if the value is another enum or any other type, it will be blocked with an appropriate ArgumentException
            
            in any case above, if the conerted value is out of valid range, the method raises ArgumentOutOfRangeException.
            </summary>
            <returns>applicaiton intent value in the valid range</returns>
        </member>
        <member name="T:System.Data.DataColumn">
            <devdoc>
               <para>
                  Represents one column of data in a <see cref='T:System.Data.DataTable'/>.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.DataColumn.autoInc">
            <summary>represents current value to return, usage pattern is .get_Current then MoveAfter</summary>
        </member>
        <member name="M:System.Data.DataColumn.#ctor">
            <devdoc>
               <para>
                  Initializes a new instance of a <see cref='T:System.Data.DataColumn'/>
                  class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumn.#ctor(System.String)">
            <devdoc>
               <para>
                  Inititalizes a new instance of the <see cref='T:System.Data.DataColumn'/> class
                  using the specified column name.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type)">
            <devdoc>
               <para>
                  Inititalizes a new instance of the <see cref='T:System.Data.DataColumn'/> class
                  using the specified column name and data type.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)">
            <devdoc>
               <para>
                  Initializes a new instance
                  of the <see cref='T:System.Data.DataColumn'/> class
                  using the specified name, data type, and expression.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DataColumn'/> class
                  using
                  the specified name, data type, expression, and value that determines whether the
                  column is an attribute.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.AllowDBNull">
            <devdoc>
               <para>
                  Gets or sets a value indicating whether null
                  values are
                  allowed in this column for rows belonging to the table.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.AutoIncrement">
            <devdoc>
               <para>
                  Gets or
                  sets a value indicating whether the column automatically increments the value of the column for new
                  rows added to the table.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.AutoIncrementSeed">
            <devdoc>
               <para>
                  Gets
                  or sets the starting value for a column that has its
               <see cref='P:System.Data.DataColumn.AutoIncrement'/> property
                  set to <see langword='true'/>
                  .
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.AutoIncrementStep">
            <devdoc>
               <para>
                  Gets or sets the increment used by a column with its <see cref='P:System.Data.DataColumn.AutoIncrement'/>
                  property set to <see langword='true'/>
                  .
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.Caption">
            <devdoc>
               <para>
                  Gets or sets
                  the caption for this column.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumn.ResetCaption">
            <devdoc>
               <para>
                  Resets the <see cref='P:System.Data.DataColumn.Caption'/> property to its previous value, or
                  to <see langword='null'/> .
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumn.ShouldSerializeCaption">
            <devdoc>
               <para>
                  Gets a value indicating whether the <see cref='P:System.Data.DataColumn.Caption'/> has been explicitly set.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.ColumnName">
            <devdoc>
               <para>
                  Gets or sets the name of the column within the <see cref='T:System.Data.DataColumnCollection'/>.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.Computed">
            <devdoc>
            Whether this column computes values.
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.DataExpression">
            <devdoc>
            The internal expression object that computes the values.
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.DataType">
            <devdoc>
               <para>
                  The type
                  of data stored in thecolumn.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.DefaultValue">
            <devdoc>
               <para>Gets or sets the default value for the
                  column when creating new rows.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.ExtendedProperties">
            <devdoc>
               <para>Gets the collection of custom user information.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.HasData">
            <devdoc>
            Indicates whether this column is now storing data.
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.Ordinal">
            <devdoc>
               <para>
                  Gets the position of the column in the <see cref='T:System.Data.DataColumnCollection'/>
                  collection.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.ReadOnly">
            <devdoc>
               <para>
                  Gets or sets a value
                  indicating whether the column allows changes once a row has been added to the table.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.Table">
            <devdoc>
               <para>
                  Gets the <see cref='T:System.Data.DataTable'/> to which the column belongs to.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.Item(System.Int32)">
            <devdoc>
            This is how data is pushed in and out of the column.
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumn.ColumnMapping">
            <devdoc>
            <para>Gets the <see cref='T:System.Data.MappingType'/> of the column.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumn.FindParentRelation">
            <devdoc>
               <para>Finds a relation that this column is the sole child of or null.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumn.IsInRelation">
            <devdoc>
                 Returns true if this column is a part of a Parent or Child key for a relation.
            </devdoc>
        </member>
        <member name="T:System.Data.AutoIncrementInt64">
            <summary>the auto stepped value with Int64 representation</summary>
            <remarks>use unchecked behavior for Dev10 Bug 568510</remarks>
        </member>
        <member name="F:System.Data.AutoIncrementInt64.current">
            <summary>the last returned auto incremented value</summary>
        </member>
        <member name="F:System.Data.AutoIncrementInt64.seed">
            <summary>the initial value use to set current</summary>
        </member>
        <member name="F:System.Data.AutoIncrementInt64.step">
            <summary>the value by which to offset the next value</summary>
        </member>
        <member name="P:System.Data.AutoIncrementInt64.Current">
            <summary>Gets and sets the current auto incremented value to use</summary>
        </member>
        <member name="P:System.Data.AutoIncrementInt64.Seed">
            <summary>Get and sets the initial seed value.</summary>
        </member>
        <member name="P:System.Data.AutoIncrementInt64.Step">
            <summary>Get and sets the stepping value.</summary>
            <exception cref="!:ArugmentException">if value is 0</exception>
        </member>
        <member name="T:System.Data.AutoIncrementBigInteger">
            <summary>the auto stepped value with BigInteger representation</summary>
        </member>
        <member name="F:System.Data.AutoIncrementBigInteger.current">
            <summary>the current auto incremented value to use</summary>
        </member>
        <member name="F:System.Data.AutoIncrementBigInteger.seed">
            <summary>the initial value use to set current</summary>
        </member>
        <member name="F:System.Data.AutoIncrementBigInteger.step">
            <summary>the value by which to offset the next value</summary>
        </member>
        <member name="P:System.Data.AutoIncrementBigInteger.Current">
            <summary>Gets and sets the current auto incremented value to use</summary>
        </member>
        <member name="P:System.Data.AutoIncrementBigInteger.Seed">
            <summary>Get and sets the initial seed value.</summary>
        </member>
        <member name="P:System.Data.AutoIncrementBigInteger.Step">
            <summary>Get and sets the stepping value.</summary>
            <exception cref="!:ArugmentException">if value is 0</exception>
        </member>
        <member name="T:System.Data.DataColumnChangeEventArgs">
            <devdoc>
               <para>
                  Provides data for the <see cref='E:System.Data.DataTable.ColumnChanging'/> event.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataColumn,System.Object)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DataColumnChangeEventArgs'/> class.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumnChangeEventArgs.Column">
            <devdoc>
               <para>Gets the column whose value is changing.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumnChangeEventArgs.Row">
            <devdoc>
               <para>Gets the row whose value is changing.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumnChangeEventArgs.ProposedValue">
            <devdoc>
               <para>Gets or sets the proposed value.</para>
            </devdoc>
        </member>
        <member name="T:System.Data.DataColumnCollection">
            <devdoc>
            <para>Represents a collection of <see cref='T:System.Data.DataColumn'/>
            objects for a <see cref='T:System.Data.DataTable'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.#ctor(System.Data.DataTable)">
            <devdoc>
            DataColumnCollection constructor.  Used only by DataTable.
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumnCollection.List">
            <devdoc>
               <para>Gets the list of the collection items.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
            <devdoc>
               <para>
                  Gets the <see cref='T:System.Data.DataColumn'/>
                  from the collection at the specified index.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataColumnCollection.Item(System.String)">
            <devdoc>
            <para>Gets the <see cref='T:System.Data.DataColumn'/> from the collection with the specified name.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)">
            <devdoc>
            <para>Adds the specified <see cref='T:System.Data.DataColumn'/>
            to the columns collection.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)">
            <devdoc>
            <para>Creates and adds a <see cref='T:System.Data.DataColumn'/>
            with
            the specified name, type, and compute expression to the columns collection.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
            <devdoc>
            <para>Creates and adds a <see cref='T:System.Data.DataColumn'/>
            with the
            specified name and type to the columns collection.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.Add(System.String)">
            <devdoc>
            <para>Creates and adds a <see cref='T:System.Data.DataColumn'/>
            with the specified name to the columns collection.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.Add">
            <devdoc>
            <para>Creates and adds a <see cref='T:System.Data.DataColumn'/> to a columns collection.</para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataColumnCollection.CollectionChanged">
            <devdoc>
               <para>Occurs when the columns collection changes, either by adding or removing a column.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.AssignName">
            <devdoc>
            Creates a new default name.
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
            <devdoc>
               <para>Checks whether the collection contains a column with the specified name.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)">
            <devdoc>
               <para>
                  Returns the index of a specified <see cref='T:System.Data.DataColumn'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.IndexOf(System.String)">
            <devdoc>
               <para>Returns the index of
                  a column specified by name.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.MakeName(System.Int32)">
            <devdoc>
            Makes a default name with the given index.  e.g. Column1, Column2, ... Columni
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
            <devdoc>
               <para>
                  Raises the <see cref='M:System.Data.DataColumnCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)'/> event.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.RegisterColumnName(System.String,System.Data.DataColumn)">
            <devdoc>
            Registers this name as being used in the collection.  Will throw an ArgumentException
            if the name is already being used.  Called by Add, All property, and Column.ColumnName property.
            if the name is equivalent to the next default name to hand out, we increment our defaultNameIndex.
            NOTE: To add a child table, pass column as null
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.Remove(System.Data.DataColumn)">
            <devdoc>
            <para>Removes the specified <see cref='T:System.Data.DataColumn'/>
            from the collection.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.RemoveAt(System.Int32)">
            <devdoc>
               <para>Removes the
                  column at the specified index from the collection.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.Remove(System.String)">
            <devdoc>
               <para>Removes the
                  column with the specified name from the collection.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataColumnCollection.UnregisterName(System.String)">
            <devdoc>
            Unregisters this name as no longer being used in the collection.  Called by Remove, All property, and
            Column.ColumnName property.  If the name is equivalent to the last proposed default name, we walk backwards
            to find the next proper default name to use.
            </devdoc>
        </member>
        <member name="T:System.Data.DataError">
            <devdoc>
            <para>Represents an custom error that can be associated with a <see cref='T:System.Data.DataRow'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataError.SetText(System.String)">
            <devdoc>
            <para>Sets the error message for the <see cref='T:System.Data.DataError'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DeletedRowInaccessibleException.#ctor">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DeletedRowInaccessibleException'/> class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DeletedRowInaccessibleException.#ctor(System.String)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DeletedRowInaccessibleException'/> class with the specified string.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.ExceptionBuilder.ThrowDataException(System.String,System.Exception)">
            <summary>trace and throw a DataException</summary>
            <param name="error">exception Message</param>
            <param name="innerException">exception InnerException</param>
            <exception cref="T:System.Data.DataException">always thrown</exception>
        </member>
        <member name="M:System.Data.ExceptionBuilder.ThrowMultipleTargetConverter(System.Exception)">
            <summary>throw DataException for multitarget failure</summary>
            <param name="innerException">exception from multitarget converter</param>
            <exception cref="T:System.Data.DataException">always thrown</exception>
        </member>
        <member name="M:System.Data.DataKey.#ctor(System.Data.DataColumn[],System.Boolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.DataRelation">
            <devdoc>
               <para>
                  Represents a parent/child relationship between two tables.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.DataRelation.nested">
            <devdoc>
            this stores whether the  child element appears beneath the parent in the XML persised files.
            </devdoc>
        </member>
        <member name="F:System.Data.DataRelation.createConstraints">
            <devdoc>
            this stores whether the the relationship should make sure that KeyConstraints and ForeignKeyConstraints
            exist when added to the ConstraintsCollections of the table.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DataRelation'/> class using the specified name,
                  parent, and child columns.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DataRelation'/> class using the specified name, parent, and child columns, and
                  value to create constraints.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DataRelation'/> class using the specified name
                  and matched arrays of parent and child columns.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DataRelation'/> class using the specified name, matched arrays of parent
                  and child columns, and value to create constraints.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.ChildColumns">
            <devdoc>
               <para>
                  Gets the child columns of this relation.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.ChildKey">
            <devdoc>
            The internal Key object for the child table.
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.ChildTable">
            <devdoc>
               <para>
                  Gets the child table of this relation.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.DataSet">
            <devdoc>
               <para>
                  Gets the <see cref='T:System.Data.DataSet'/> to which the relations' collection belongs to.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.GetChildRows(System.Data.DataKey,System.Data.DataKey,System.Data.DataRow,System.Data.DataRowVersion)">
            <devdoc>
            Gets the child rows for the parent row across the relation using the version given
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.GetParentRows(System.Data.DataKey,System.Data.DataKey,System.Data.DataRow,System.Data.DataRowVersion)">
            <devdoc>
            Gets the parent rows for the given child row across the relation using the version given
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.SetDataSet(System.Data.DataSet)">
            <devdoc>
            Internally sets the DataSet pointer.
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.ParentColumns">
            <devdoc>
               <para>
                  Gets the parent columns of this relation.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.ParentKey">
            <devdoc>
            The internal constraint object for the parent table.
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.ParentTable">
            <devdoc>
               <para>
                  Gets the parent table of this relation.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.RelationName">
            <devdoc>
               <para>
                  Gets or sets
                  the name used to look up this relation in the parent
                  data set's <see cref='T:System.Data.DataRelationCollection'/>.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.Nested">
            <devdoc>
               <para>
                  Gets or sets a value indicating whether relations are nested.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelation.ExtendedProperties">
            <devdoc>
               <para>Gets the collection of custom user information.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.CheckStateForProperty">
            <devdoc>
               <para>Checks to ensure the DataRelation is a valid object, even if it doesn't
                  belong to a <see cref='T:System.Data.DataSet'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelation.ToString">
            <devdoc>
            </devdoc>
        </member>
        <member name="T:System.Data.DataRelationCollection">
            <devdoc>
               <para>
                  Represents the collection of relations,
                  each of which allows navigation between related parent/child tables.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelationCollection.Item(System.Int32)">
            <devdoc>
               <para>Gets the relation specified by index.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRelationCollection.Item(System.String)">
            <devdoc>
               <para>Gets the relation specified by name.</para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataRelationCollection.CollectionChanged">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.AssignName">
            <devdoc>
            Creates a new default name.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.Clear">
            <devdoc>
            Clears the collection of any relations.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.Contains(System.String)">
            <devdoc>
             Returns true if this collection has a relation with the given name (case insensitive), false otherwise.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)">
            <devdoc>
               <para>
                  Returns the index of a specified <see cref='T:System.Data.DataRelation'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.IndexOf(System.String)">
            <devdoc>
               <para>
                  Returns the index of the
                  relation with the given name (case insensitive), or -1 if the relation
                  doesn't exist in the collection.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.GetDataSet">
            <devdoc>
            Gets the dataSet for this collection.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.MakeName(System.Int32)">
            <devdoc>
            Makes a default name with the given index.  e.g. Relation1, Relation2, ... Relationi
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
            <devdoc>
            This method is called whenever the collection changes.  Overriders
            of this method should call the base implementation of this method.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.RegisterName(System.String)">
            <devdoc>
            Registers this name as being used in the collection.  Will throw an ArgumentException
            if the name is already being used.  Called by Add, All property, and Relation.RelationName property.
            if the name is equivalent to the next default name to hand out, we increment our defaultNameIndex.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)">
            <devdoc>
               <para>
                  Verifies if a given relation can be removed from the collection.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.Remove(System.Data.DataRelation)">
            <devdoc>
            Removes the given relation from the collection.
            An ArgumentNullException is thrown if this relation is null.  An ArgumentException is thrown
            if this relation doesn't belong to this collection.
            The CollectionChanged event is fired if it succeeds.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.RemoveAt(System.Int32)">
            <devdoc>
            Removes the relation at the given index from the collection.  An IndexOutOfRangeException is
            thrown if this collection doesn't have a relation at this index.
            The CollectionChanged event is fired if it succeeds.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.Remove(System.String)">
            <devdoc>
            Removes the relation with the given name from the collection.  An IndexOutOfRangeException is
            thrown if this collection doesn't have a relation with that name
            The CollectionChanged event is fired if it succeeds.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)">
            <devdoc>
            Does verification on the relation.
            An ArgumentNullException is thrown if this relation is null.  An ArgumentException is thrown
            if this relation doesn't belong to this collection.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRelationCollection.UnregisterName(System.String)">
            <devdoc>
            Unregisters this name as no longer being used in the collection.  Called by Remove, All property, and
            Relation.RelationName property.  If the name is equivalent to the last proposed default name, we walk backwards
            to find the next proper default name to use.
            </devdoc>
        </member>
        <member name="T:System.Data.DataRow">
            <devdoc>
            <para>Represents a row of data in a <see cref='T:System.Data.DataTable'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)">
            <devdoc>
               <para>
                  Initializes a new instance of the DataRow.
               </para>
               <para>
                  Constructs a row from the builder. Only for internal usage..
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.RowError">
            <devdoc>
               <para>Gets or sets the custom error description for a row.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.RowState">
            <devdoc>
               <para>Gets the current state of the row in regards to its relationship to the table.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.Table">
            <devdoc>
            <para>Gets the <see cref='T:System.Data.DataTable'/>
            for which this row has a schema.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.Item(System.Int32)">
            <devdoc>
               <para>Gets or sets the data stored in the column specified by index.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.Item(System.String)">
            <devdoc>
               <para>Gets or sets the data stored in the column specified by
                  name.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
            <devdoc>
               <para>Gets or sets
                  the data stored in the specified <see cref='T:System.Data.DataColumn'/>.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)">
            <devdoc>
               <para>Gets the data stored
                  in the column, specified by index and version of the data to retrieve.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)">
            <devdoc>
               <para> Gets the specified version of data stored in
                  the named column.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)">
            <devdoc>
            <para>Gets the specified version of data stored in the specified <see cref='T:System.Data.DataColumn'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.AcceptChanges">
            <devdoc>
               <para>Commits all the changes made to this row
                  since the last time <see cref='M:System.Data.DataRow.AcceptChanges'/> was called.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.BeginEdit">
            <devdoc>
            <para>Begins an edit operation on a <see cref='T:System.Data.DataRow'/>object.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.CancelEdit">
            <devdoc>
               <para>Cancels the current edit on the row.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.CheckInTable">
            <devdoc>
            Throws a RowNotInTableException if row isn't in table.
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)">
            <devdoc>
               <para>Sets the error description for a column specified by index.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.SetColumnError(System.String,System.String)">
            <devdoc>
               <para>Sets
                  the error description for a column specified by name.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)">
            <devdoc>
            <para>Sets the error description for a column specified as a <see cref='T:System.Data.DataColumn'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetColumnError(System.Int32)">
            <devdoc>
               <para>Gets the error description for the column specified
                  by index.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetColumnError(System.String)">
            <devdoc>
               <para>Gets the error description for a column, specified by name.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)">
            <devdoc>
               <para>Gets the error description of
                  the specified <see cref='T:System.Data.DataColumn'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.ClearErrors">
            <summary>
            Clears the errors for the row, including the <see cref='P:System.Data.DataRow.RowError'/>
            and errors set with <see cref='M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)'/>
            </summary>
        </member>
        <member name="P:System.Data.DataRow.HasErrors">
            <devdoc>
               <para>Gets a value indicating whether there are errors in a columns collection.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetColumnsInError">
            <devdoc>
               <para>Gets an array of columns that have errors.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)">
            <devdoc>
            <para>Gets the child rows of this <see cref='T:System.Data.DataRow'/> using the
               specified <see cref='T:System.Data.DataRelation'/>
               .</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)">
            <devdoc>
            <para>Gets the child rows of this <see cref='T:System.Data.DataRow'/> using the specified <see cref='T:System.Data.DataRelation'/> and the specified <see cref='T:System.Data.DataRowVersion'/></para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)">
            <devdoc>
            <para>Gets the parent row of this <see cref='T:System.Data.DataRow'/> using the specified <see cref='T:System.Data.DataRelation'/> .</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)">
            <devdoc>
            <para>Gets the parent row of this <see cref='T:System.Data.DataRow'/>
            using the specified <see cref='T:System.Data.DataRelation'/> and <see cref='T:System.Data.DataRowVersion'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetParentRows(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)">
            <devdoc>
               <para>
                  Gets the parent rows of this <see cref='T:System.Data.DataRow'/> using the specified <see cref='T:System.Data.DataRelation'/> .
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)">
            <devdoc>
               <para>
                  Gets the parent rows of this <see cref='T:System.Data.DataRow'/> using the specified <see cref='T:System.Data.DataRelation'/> .
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)">
            <devdoc>
               <para>
                  Gets a value indicating whether a specified version exists.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.IsNull(System.Int32)">
            <devdoc>
               <para>
                  Gets
                  a value indicating whether the column at the specified index contains a
                  null value.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.IsNull(System.String)">
            <devdoc>
               <para>
                  Gets a value indicating whether the named column contains a null value.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn)">
            <devdoc>
               <para>
                  Gets a value indicating whether the specified <see cref='T:System.Data.DataColumn'/>
                  contains a null value.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRow.SetNull(System.Data.DataColumn)">
            <devdoc>
               <para>
                  Sets the specified column's value to a null value.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRowChangeEventArgs.#ctor(System.Data.DataRow,System.Data.DataRowAction)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.DataRowChangeEventArgs'/> class.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRowChangeEventArgs.Row">
            <devdoc>
               <para>
                  Gets the row upon which an action has occurred.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataRowChangeEventArgs.Action">
            <devdoc>
               <para>
                  Gets the action that has occurred on a <see cref='T:System.Data.DataRow'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataRowCollection.#ctor(System.Data.DataTable)">
            <devdoc>
            Creates the DataRowCollection for the given table.
            </devdoc>
        </member>
        <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
            <devdoc>
               <para>Gets the row at the specified index.</para>
            </devdoc>
        </member>
        <member name="T:System.Data.DataRowCreatedEventHandler">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.DataSet">
            <devdoc>
               <para>
                  Represents an in-memory cache of data.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.#ctor">
            <devdoc>
            <para>Initializes a new instance of the <see cref='T:System.Data.DataSet'/> class.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.#ctor(System.String)">
            <devdoc>
            <para>Initializes a new instance of a <see cref='T:System.Data.DataSet'/>
            class with the given name.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.EnforceConstraints">
            <devdoc>
               <para>Gets or sets a value indicating whether constraint rules are followed when
                  attempting any update operation.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.DataSetName">
            <devdoc>
               <para>Gets or
                  sets the name of this <see cref='T:System.Data.DataSet'/> .</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.Namespace">
            <devdoc>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.Prefix">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.ExtendedProperties">
            <devdoc>
               <para>Gets the collection of custom user information.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.HasErrors">
            <devdoc>
               <para>
                  Gets a value indicating whether there are errors in any
                  of the rows in any of the tables of this <see cref='T:System.Data.DataSet'/> .
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.Locale">
            <devdoc>
               <para>
                  Gets or sets the locale information used to compare strings within the table.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.Relations">
            <devdoc>
               <para>
                  Get the collection of relations that link tables and
                  allow navigation from parent tables to child tables.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.ShouldSerializeRelations">
            <devdoc>
               <para>
                  Indicates whether <see cref='P:System.Data.DataSet.Relations'/> property should be persisted.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.ResetRelations">
            <devdoc>
               <para>
                  Resets the <see cref='P:System.Data.DataSet.Relations'/> property to its default state.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataSet.Tables">
            <devdoc>
            <para>Gets the collection of tables contained in the <see cref='T:System.Data.DataSet'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.ShouldSerializeTables">
            <devdoc>
               <para>
                  Indicates whether <see cref='P:System.Data.DataSet.Tables'/> property should be persisted.
               </para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataSet.MergeFailed">
            <devdoc>
               <para>Occurs when attempting to merge schemas for two tables with the same
                  name.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.HasChanges">
            <devdoc>
            <para>Gets a value indicating whether the <see cref='T:System.Data.DataSet'/> has changes, including new,
               deleted, or modified rows.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
            <devdoc>
            <para>Gets a value indicating whether the <see cref='T:System.Data.DataSet'/> has changes, including new,
               deleted, or modified rows, filtered by <see cref='T:System.Data.DataRowState'/>.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.GetParentRelations(System.Data.DataTable)">
            <devdoc>
               <para>
                  Gets the collection of parent relations which belong to a
                  specified table.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.OnMergeFailed(System.Data.MergeFailedEventArgs)">
            <devdoc>
                Inheriting classes should override this method to handle this event.
                Call base.OnMergeFailed to send this event to any registered event
                listeners.
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
            <devdoc>
            This method should be overriden by subclasses to restrict tables being removed.
            </devdoc>
        </member>
        <member name="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
            <devdoc>
            This method should be overriden by subclasses to restrict tables being removed.
            </devdoc>
        </member>
        <member name="T:System.Data.DataSetDateTime">
            <devdoc>
            <para>Gets the DateTimeMode of a DateTime <see cref='T:System.Data.DataColumn'/> object.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.DataSetDateTime.Local">
            <devdoc>
               <para>The datetime column in Local DateTimeMode stores datetime in Local. Adjusts Utc/Unspecifed to Local. Serializes as Local</para>
            </devdoc>
        </member>
        <member name="F:System.Data.DataSetDateTime.Unspecified">
            <devdoc>
            <para>The datetime column in Unspecified DateTimeMode stores datetime in Unspecified. Adjusts Local/Utc to Unspecified. Serializes as Unspecified with no offset across timezones</para>
            </devdoc>
        </member>
        <member name="F:System.Data.DataSetDateTime.UnspecifiedLocal">
            <devdoc>
            <para>This is the default. The datetime column in UnspecifiedLocal DateTimeMode stores datetime in Unspecfied. Adjusts Local/Utc to Unspecified. Serializes as Unspecified but applying offset across timezones</para>
            </devdoc>
        </member>
        <member name="F:System.Data.DataSetDateTime.Utc">
            <devdoc>
               <para>
                  <para>The datetime column in Utc DateTimeMode  stores datetime in Utc. Adjusts Local/Unspecified to Utc. Serializes as Utc</para>
               </para>
            </devdoc>
        </member>
        <member name="T:System.Data.DataTable">
            <devdoc>
               <para>Represents one table of in-memory data.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.DataTable.nextRowID">
            <summary>
            Monotonically increasing number representing the order <see cref="T:System.Data.DataRow"/> have been added to <see cref="T:System.Data.DataRowCollection"/>.
            </summary>
            <remarks>This limits <see cref="!:DataRowCollection.Add(DataRow)"/> to <see cref="F:System.Int32.MaxValue"/> operations.</remarks>
        </member>
        <member name="M:System.Data.DataTable.#ctor">
            <devdoc>
            <para>Initializes a new instance of the <see cref='T:System.Data.DataTable'/> class with no arguments.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.#ctor(System.String)">
            <devdoc>
            <para>Intitalizes a new instance of the <see cref='T:System.Data.DataTable'/> class with the specified table
               name.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.ChildRelations">
            <devdoc>
            <para>Gets the collection of child relations for this <see cref='T:System.Data.DataTable'/>.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.Columns">
            <devdoc>
               <para>Gets the collection of columns that belong to this table.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.DataSet">
            <devdoc>
            <para>Gets the <see cref='T:System.Data.DataSet'/> that this table belongs to.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.DisplayExpression">
            <devdoc>
               <para>Gets or sets the expression that will return a value used to represent
                  this table in UI.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.ExtendedProperties">
            <devdoc>
               <para>Gets the collection of customized user information.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.HasErrors">
            <devdoc>
               <para>Gets a value indicating whether there are errors in any of the rows in any of
                  the tables of the <see cref='T:System.Data.DataSet'/> to which the table belongs.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.Locale">
            <devdoc>
               <para>Gets or sets the locale information used to compare strings within the table.</para>
               <para>Also used for locale sensitive, case,kana,width insensitive column name lookups</para>
               <para>Also used for converting values to and from string</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.MinimumCapacity">
            <devdoc>
               <para>Gets or sets the initial starting size for this table.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.ParentRelations">
            <devdoc>
            <para>Gets the collection of parent relations for this <see cref='T:System.Data.DataTable'/>.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.Rows">
            <devdoc>
               <para>Gets the collection of rows that belong to this table.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.TableName">
            <devdoc>
               <para>Gets or sets the name of the table.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.Namespace">
            <devdoc>
               <para>
                  Gets or sets the namespace for the <see cref='T:System.Data.DataTable'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.ShouldSerializeNamespace">
            <devdoc>
               <para>
                  Indicates whether the <see cref='P:System.Data.DataTable.Namespace'/> property should be persisted.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.ResetNamespace">
            <devdoc>
               <para>
                  Resets the <see cref='P:System.Data.DataTable.Namespace'/> property to its default state.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.BeginInit">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTable.Prefix">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataTable.ColumnChanging">
            <devdoc>
               <para>Occurs when a value has been submitted for this column.</para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataTable.ColumnChanged">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataTable.RowChanged">
            <devdoc>
               <para>
                  Occurs after a row in the table has been successfully edited.
               </para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataTable.RowChanging">
            <devdoc>
               <para>
                  Occurs when the <see cref='T:System.Data.DataRow'/> is changing.
               </para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataTable.RowDeleting">
            <devdoc>
               <para>
                  Occurs before a row in the table is
                  about to be deleted.
               </para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataTable.RowDeleted">
            <devdoc>
               <para>
                  Occurs after a row in the
                  table has been deleted.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.Compute(System.String,System.String)">
            <devdoc>
               <para>Computes the given expression on the current rows that pass the filter criteria.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.GetErrors">
            <devdoc>
            <para>Returns an array of <see cref='T:System.Data.DataRow'/> objects that contain errors.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.NewRow">
            <devdoc>
            <para>Creates a new <see cref='T:System.Data.DataRow'/>
            with the same schema as the table.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.GetRowType">
            <devdoc>
               <para>Gets the row type.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)">
            <devdoc>
            <para>Notifies the <see cref='T:System.Data.DataTable'/> that a <see cref='T:System.Data.DataColumn'/> is
               being removed.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <devdoc>
               <para>
                  Raises the <see cref='E:System.Data.DataTable.RowChanged'/> event.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <devdoc>
               <para>
                  Raises the <see cref='E:System.Data.DataTable.RowChanging'/> event.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <devdoc>
               <para>
                  Raises the <see cref='M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)'/> event.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <devdoc>
               <para>
                  Raises the <see cref='M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)'/> event.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.Select">
            <devdoc>
            <para>Returns an array of all <see cref='T:System.Data.DataRow'/> objects.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.Select(System.String)">
            <devdoc>
            <para>Returns an array of all <see cref='T:System.Data.DataRow'/> objects that match the filter criteria in order of
               primary key (or lacking one, order of addition.)</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.Select(System.String,System.String)">
            <devdoc>
            <para>Returns an array of all <see cref='T:System.Data.DataRow'/> objects that match the filter criteria, in the the
               specified sort order.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)">
            <devdoc>
            <para>Returns an array of all <see cref='T:System.Data.DataRow'/> objects that match the filter in the order of the
               sort, that match the specified state.</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTable.ToString">
            <devdoc>
            <para>Returns the <see cref='P:System.Data.DataTable.TableName'/> and <see cref='P:System.Data.DataTable.DisplayExpression'/>, if there is one as a concatenated string.</para>
            </devdoc>
        </member>
        <member name="T:System.Data.DataTableCollection">
            <devdoc>
               <para>
                  Represents the collection of tables for the <see cref='T:System.Data.DataSet'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.#ctor(System.Data.DataSet)">
            <devdoc>
            DataTableCollection constructor.  Used only by DataSet.
            </devdoc>
        </member>
        <member name="P:System.Data.DataTableCollection.List">
            <devdoc>
               <para>
                  Gets the tables
                  in the collection as an object.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTableCollection.Item(System.Int32)">
            <devdoc>
               <para>Gets the table specified by its index.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.DataTableCollection.Item(System.String)">
            <devdoc>
               <para>Gets the table in the collection with the given name (not case-sensitive).</para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataTableCollection.CollectionChanged">
            <devdoc>
               <para>
                  Occurs when the collection is changed.
               </para>
            </devdoc>
        </member>
        <member name="E:System.Data.DataTableCollection.CollectionChanging">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.ArrayAdd(System.Data.DataTable)">
            <devdoc>
             Adds the table to the tables array.
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.AssignName">
            <devdoc>
            Creates a new default name.
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.Contains(System.String)">
            <devdoc>
               <para>
                  Checks if a table, specified by name, exists in the collection.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.IndexOf(System.Data.DataTable)">
            <devdoc>
               <para>
                  Returns the index of a specified <see cref='T:System.Data.DataTable'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.IndexOf(System.String)">
            <devdoc>
               <para>
                  Returns the index of the
                  table with the given name (case insensitive), or -1 if the table
                  doesn't exist in the collection.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.MakeName(System.Int32)">
            <devdoc>
            Makes a default name with the given index.  e.g. Table1, Table2, ... Tablei
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)">
            <devdoc>
               <para>
                  Raises the <see cref='M:System.Data.DataTableCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)'/> event.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.RegisterName(System.String,System.String)">
            <devdoc>
            Registers this name as being used in the collection.  Will throw an ArgumentException
            if the name is already being used.  Called by Add, All property, and Table.TableName property.
            if the name is equivalent to the next default name to hand out, we increment our defaultNameIndex.
            </devdoc>
        </member>
        <member name="M:System.Data.DataTableCollection.UnregisterName(System.String)">
            <devdoc>
            Unregisters this name as no longer being used in the collection.  Called by Remove, All property, and
            Table.TableName property.  If the name is equivalent to the last proposed default name, we walk backwards
            to find the next proper default name to  use.
            </devdoc>
        </member>
        <member name="T:System.Data.DataViewRowState">
            <devdoc>
            <para>Describes the version of data in a <see cref='T:System.Data.DataRow'/>.</para>
            </devdoc>
        </member>
        <member name="T:System.Data.MergeFailedEventArgs">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.MergeFailedEventArgs.#ctor(System.Data.DataTable,System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.MergeFailedEventArgs.Table">
            <devdoc>
            <para>Gets the name of the <see cref='T:System.Data.DataTable'/>.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.MergeFailedEventArgs.Conflict">
            <devdoc>
               <para>Gets a description of the merge conflict.</para>
            </devdoc>
        </member>
        <member name="T:System.Data.PropertyCollection">
            <devdoc>
            <para>Represents a collection of properties that can be added to <see cref='T:System.Data.DataColumn'/>, 
            <see cref='T:System.Data.DataSet'/>, 
               or <see cref='T:System.Data.DataTable'/>.</para>
            </devdoc>
        </member>
        <member name="P:System.Data.RBTree`1.Item(System.Int32)">
            <summary>
             return key associated with the specified value. Specifically, return record for specified index/value
             indexer
            </summary>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="M:System.Data.RBTree`1.GetNodeByKey(`0)">
            <returns>Determine node and the branch it took to get there.</returns>
        </member>
        <member name="M:System.Data.RBTree`1.GetIndexByNodePath(System.Data.RBTree{`0}.NodePath)">
            <summary>Determine tree index position from node path.</summary>
            <remarks>This differs from GetIndexByNode which would search for the main tree node instead of just knowing it</remarks>
        </member>
        <member name="M:System.Data.RBTree`1.GetNodeByIndex(System.Int32)">
            <returns>Determine node and the branch it took to get there.</returns>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="T:System.Data.RBTree`1.NodePath">
            <summary>Represents the node in the tree and the satellite branch it took to get there.</summary>
        </member>
        <member name="F:System.Data.RBTree`1.NodePath.NodeID">
            <summary>Represents the node in the tree</summary>
        </member>
        <member name="F:System.Data.RBTree`1.NodePath.MainTreeNodeID">
            <summary>
            When not NIL, it represents the fact NodeID is has duplicate values in the tree.
            This is the 'fake' node in the main tree that redirects to the root of the satellite tree.
            By tracking this value, we don't have to repeatedly search for this node.
            </summary>
        </member>
        <member name="T:System.Data.Rule">
            <devdoc>
            <para>Indicates the action that occurs when a <see cref='!:System.Data.ForeignKeyConstraint'/>
            is enforced.</para>
            </devdoc>
        </member>
        <member name="F:System.Data.Rule.None">
            <devdoc>
               <para>
                  No action occurs.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.Rule.Cascade">
            <devdoc>
               <para>
                  Changes are cascaded through the relationship.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.Rule.SetNull">
            <devdoc>
               <para>
                  Null values are set in the rows affected by the deletion.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.Rule.SetDefault">
            <devdoc>
               <para>
                  Default values are set in the rows affected by the deletion.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.Index._comparison">
            <summary>Allow a user implemented comparision of two DataRow</summary>
            <remarks>User must use correct DataRowVersion in comparison or index corruption will happen</remarks>
        </member>
        <member name="M:System.Data.Index.GetIndex(System.Int32,System.Int32)">
            <summary>
            When searching by value for a specific record, the DataRow may require backdating to reflect the appropriate state
            otherwise on Delete of a DataRow in the Added state, would result in the <see cref="T:System.Comparison`1"/> where the row
            reflection record would be in the Detatched instead of Added state.
            </summary>
        </member>
        <member name="M:System.Data.Index.FindRecord(System.Int32)">
            <summary>
            Find index of maintree node that matches key in record
            </summary>
        </member>
        <member name="M:System.Data.Index.FindRecords``2(System.Data.Index.ComparisonBySelector{``0,``1},``0)">
            <summary>This method exists for LinqDataView to keep a level of abstraction away from the RBTree</summary>
        </member>
        <member name="M:System.Data.Index.GetReplaceAction(System.Data.DataViewRowState)">
            <summary>Determine if the record that needs backdating is the newRecord or oldRecord or neither</summary>
        </member>
        <member name="T:System.Data.XmlReadMode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.XmlReadMode.Auto">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.XmlReadMode.ReadSchema">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.XmlReadMode.IgnoreSchema">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.XmlReadMode.InferSchema">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.XmlReadMode.DiffGram">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.XmlReadMode.Fragment">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.XmlReadMode.InferTypedSchema">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>        
        </member>
        <member name="T:System.Data.XmlTreeGen">
            <devdoc>
            </devdoc>
        </member>
        <member name="P:System.Data.ProviderBase.DbConnectionInternal.UnbindOnTransactionCompletion">
            <summary>
            Get boolean that specifies whether an enlisted transaction can be unbound from 
            the connection when that transaction completes.
            </summary>
            <value>
            True if the enlisted transaction can be unbound on transaction completion; otherwise false.
            </value>
        </member>
        <member name="M:System.Data.ProviderBase.DbConnectionInternal.DoomThisConnection">
            <devdoc>Ensure that this connection cannot be put back into the pool.</devdoc>
        </member>
        <member name="M:System.Data.ProviderBase.DbConnectionInternal.TryOpenConnection(System.Data.Common.DbConnection,System.Data.ProviderBase.DbConnectionFactory,System.Threading.Tasks.TaskCompletionSource{System.Data.ProviderBase.DbConnectionInternal},System.Data.Common.DbConnectionOptions)">
            <devdoc>The default implementation is for the open connection objects, and
            it simply throws.  Our private closed-state connection objects
            override this and do the correct thing.</devdoc>
        </member>
        <member name="M:System.Data.ProviderBase.DbConnectionInternal.IsConnectionAlive(System.Boolean)">
            <summary>
            When overridden in a derived class, will check if the underlying connection is still actually alive
            </summary>
            <param name="throwOnException">If true an exception will be thrown if the connection is dead instead of returning true\false
            (this allows the caller to have the real reason that the connection is not alive (e.g. network error, etc))</param>
            <returns>True if the connection is still alive, otherwise false (If not overridden, then always true)</returns>
        </member>
        <member name="T:System.Data.Nodes">
            <devdoc>
                ExpressionParser: expression node types
            </devdoc>
        </member>
        <member name="F:System.Data.ExpressionParser.Empty">
            <devdoc>
                Operand situations for parser
            </devdoc>
        </member>
        <member name="F:System.Data.ExpressionParser.MaxPredicates">
            <devdoc>
                UNDONE: we should be more flexible: the following consts should be config..
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.ParseAggregateArgument(System.Data.FunctionId)">
            <devdoc>
                parse the argument to an Aggregate function.
                the syntax is
                     Func(child[(relation_name)].column_name)
                When the function is called we have already parsed the Aggregate name, and open paren
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.NodePop">
            <devdoc>
                NodePop - Pop an operand node from the node stack.
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.NodePeek">
            <devdoc>
                NodePeek - Peek at the top node.
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.NodePush(System.Data.ExpressionNode)">
            <devdoc>
                Push an operand node onto the node stack
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.BuildExpression(System.Int32)">
            <devdoc>
                Builds expression tree for higher-precedence operator to be used as left
                operand of current operator. May cause errors - always do ErrorCheck() upin return.
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.ScanNumeric">
            <devdoc>
                ScanNumeric - parse number.
                In format: [digit|.]*{[e|E]{[+|-]}{digit*}}
                Further checking is done by constant parser.
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.ScanName">
            <devdoc>
                Just a string of alphanumeric characters.
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.ScanName(System.Char,System.Char,System.String)">
            <devdoc>
                 recognize bracketed identifiers.
                 Special case: we are using '\' character to escape '[' and ']' only, so '\' by itself  is not an escape
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.ScanDate">
            <devdoc>
                Just read the string between '#' signs, and parse it later
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.IsWhiteSpace(System.Char)">
            <devdoc>
                is the character a white space character?
                Consider using CharacterInfo().IsWhiteSpace(ch) (System.Globalization)
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.IsAlphaNumeric(System.Char)">
            <devdoc>
                is the character an alphanumeric?
            </devdoc>
        </member>
        <member name="M:System.Data.ExpressionParser.IsAlpha(System.Char)">
            <devdoc>
                is the character an alpha?
            </devdoc>
        </member>
        <member name="T:System.Data.OperatorInfo">
            <devdoc>
                Operator stack element
            </devdoc>
        </member>
        <member name="T:System.Data.InvalidExpressionException">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.InvalidExpressionException.#ctor">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.InvalidExpressionException.#ctor(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.EvaluateException">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.EvaluateException.#ctor">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.EvaluateException.#ctor(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SyntaxErrorException">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SyntaxErrorException.#ctor">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SyntaxErrorException.#ctor(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.IFilter">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.IFilter.Invoke(System.Data.DataRow,System.Data.DataRowVersion)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.NameNode.ParseName(System.Char[],System.Int32,System.Int32)">
            <devdoc>
                Parses given name and checks it validity
            </devdoc>
        </member>
        <member name="F:System.Data.Operators.priStart">
            <devdoc>
                Operator priorities
            </devdoc>
        </member>
        <member name="F:System.Data.Operators.priority">
            <devdoc>
                Mapping from Operator to prioritys
                CONSIDER: fast, but hard to maitain
            </devdoc>
        </member>
        <member name="F:System.Data.Operators.Looks">
            <devdoc>
                this is array used for error messages.
            </devdoc>
        </member>
        <member name="T:System.Data.SqlClient.ApplicationIntent">
            <summary>
            represents the application workload type when connecting to a server
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlClientFactory.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Extension mechanism for additional services; currently the only service
            supported is the DbProviderServices
            </summary>
            <returns>requested service provider or null.</returns>
        </member>
        <member name="P:System.Data.SqlClient.SqlCommandBuilder.CatalogLocation">
            <devnote>SqlServer only supports CatalogLocation.Start</devnote>
        </member>
        <member name="P:System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator">
            <devnote>SqlServer only supports '.'</devnote>
        </member>
        <member name="P:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix">
            <devnote>SqlServer only supports '.'</devnote>
        </member>
        <member name="M:System.Data.SqlClient.MetaType.AssertIsUserDefinedTypeInstance(System.Object,System.String)">
            <summary>
            Assert that the supplied object is an instance of a SQL User-Defined Type (UDT).
            </summary>
            <param name="sqlValue">Object instance to be tested.</param>
            <remarks>
            This method is only compiled with debug builds, and it a helper method for the GetComValueFromSqlVariant method defined in this class.
            
            The presence of the SqlUserDefinedTypeAttribute on the object's type 
            is used to determine if the object is a UDT instance (if present it is a UDT, else it is not).
            </remarks>
            <exception cref="T:System.NullReferenceException">
            If sqlValue is null.  Callers must ensure the object is non-null.
            </exception>
        </member>
        <member name="T:System.Data.SqlClient.SqlInfoMessageEventHandler">
            <devdoc>
               <para>
                  Represents the method that will handle the <see cref='E:System.Data.SqlClient.SqlConnection.InfoMessage'/> event of a <see cref='T:System.Data.SqlClient.SqlConnection'/>.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlClient.SqlInternalConnectionTds.UnbindOnTransactionCompletion">
            <summary>
            Get boolean that specifies whether an enlisted transaction can be unbound from 
            the connection when that transaction completes.
            </summary>
            <value>
            This override always returns false.
            </value>
            <remarks>
            The SqlInternalConnectionTds.CheckEnlistedTransactionBinding method handles implicit unbinding for disposed transactions.
            </remarks>
        </member>
        <member name="M:System.Data.SqlClient.SqlInternalConnectionTds.CheckEnlistedTransactionBinding">
            <summary>
            Validate the enlisted transaction state, taking into consideration the ambient transaction and transaction unbinding mode.
            If there is no enlisted transaction, this method is a nop.
            </summary>
            <remarks>
            <para>
            This method must be called while holding a lock on the SqlInternalConnection instance,
            to ensure we don't accidentally execute after the transaction has completed on a different thread, 
            causing us to unwittingly execute in auto-commit mode.
            </para>
            
            <para>
            When using Explicit transaction unbinding, 
            verify that the enlisted transaction is active and equal to the current ambient transaction.
            </para>
            
            <para>
            When using Implicit transaction unbinding,
            verify that the enlisted transaction is active.
            If it is not active, and the transaction object has been diposed, unbind from the transaction.
            If it is not active and not disposed, throw an exception.
            </para>
            </remarks>
        </member>
        <member name="M:System.Data.SqlClient.SqlSequentialStream.SetClosed">
            <summary>
            Forces the stream to act as if it was closed (i.e. CanRead=false and Read() throws)
            This does not actually close the stream, read off the rest of the data or dispose this
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlSequentialStream.ValidateReadParameters(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Checks the the parameters passed into a Read() method are valid
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:System.Data.SqlClient.SqlSequentialTextReader.SetClosed">
            <summary>
            Forces the TextReader to act as if it was closed
            This does not actually close the stream, read off the rest of the data or dispose this
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlSequentialTextReader.InternalRead(System.Char[],System.Int32,System.Int32)">
            <summary>
            Performs the actual reading and converting
            NOTE: This assumes that buffer, index and count are all valid, we're not closed (!IsClosed) and that there is data left (IsDataLeft())
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:System.Data.SqlClient.SqlSequentialTextReader.PrepareByteBuffer(System.Int32,System.Int32@)">
            <summary>
            Creates a byte array large enough to store all bytes for the characters in the current encoding, then fills it with any leftover bytes
            </summary>
            <param name="numberOfChars">Number of characters that are to be read</param>
            <param name="byteBufferUsed">Number of bytes pre-filled by the leftover bytes</param>
            <returns>A byte array of the correct size, pre-filled with leftover bytes</returns>
        </member>
        <member name="M:System.Data.SqlClient.SqlSequentialTextReader.DecodeBytesToChars(System.Byte[],System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>
            Decodes the given bytes into characters, and stores the leftover bytes for later use
            </summary>
            <param name="inBuffer">Buffer of bytes to decode</param>
            <param name="inBufferCount">Number of bytes to decode from the inBuffer</param>
            <param name="outBuffer">Buffer to write the characters to</param>
            <param name="outBufferOffset">Offset to start writing to outBuffer at</param>
            <param name="outBufferCount">Maximum number of characters to decode</param>
            <returns>The actual number of characters decoded</returns>
        </member>
        <member name="P:System.Data.SqlClient.SqlSequentialTextReader.IsClosed">
            <summary>
            True if this TextReader is supposed to be closed
            </summary>
        </member>
        <member name="P:System.Data.SqlClient.SqlSequentialTextReader.IsDataLeft">
            <summary>
            True if there is data left to read
            </summary>
            <returns></returns>
        </member>
        <member name="P:System.Data.SqlClient.SqlSequentialTextReader.HasPeekedChar">
            <summary>
            True if there is a peeked character available
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlSequentialTextReader.ValidateReadParameters(System.Char[],System.Int32,System.Int32)">
            <summary>
            Checks the the parameters passed into a Read() method are valid
            </summary>
            <param name="buffer"></param>
            <param name="index"></param>
            <param name="count"></param>
        </member>
        <member name="M:System.Data.SqlClient.SQL.MultiSubnetFailoverWithFailoverPartner(System.Boolean,System.Guid)">
            <summary>
            used to block two scenarios if MultiSubnetFailover is true: 
            * server-provided failover partner - raising SqlException in this case
            * connection string with failover partner and MultiSubnetFailover=true - rasing argument one in this case with the same message
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.SQL.GetSNIErrorMessage(System.Int32)">
            <summary>
            gets a message for SNI error (sniError must be valid, non-zero error code)
            </summary>
        </member>
        <member name="T:System.Data.SqlClient.SqlServerEscapeHelper">
            <summary>
            This class holds helper methods to escape Microsoft SQL Server identifiers, such as table, schema, database or other names
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlServerEscapeHelper.EscapeIdentifier(System.String)">
            <summary>
            Escapes the identifier with square brackets. The input has to be in unescaped form, like the parts received from MultipartIdentifier.ParseMultipartIdentifier.
            </summary>
            <param name="name">name of the identifier, in unescaped form</param>
            <returns>escapes the name with [], also escapes the last close bracket with double-bracket</returns>
        </member>
        <member name="M:System.Data.SqlClient.SqlServerEscapeHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
            Same as above EscapeIdentifier, except that output is written into StringBuilder
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlServerEscapeHelper.EscapeStringAsLiteral(System.String)">
            <summary>
             Escape a string to be used inside TSQL literal, such as N'somename' or 'somename'
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.SqlServerEscapeHelper.MakeStringLiteral(System.String)">
            <summary>
            Escape a string as a TSQL literal, wrapping it around with single quotes.
            Use this method to escape input strings to prevent SQL injection 
            and to get correct behavior for embedded quotes.
            </summary>
            <param name="input">unescaped string</param>
            <returns>escaped and quoted literal string</returns>
        </member>
        <member name="T:System.Data.SqlClient.TdsEnums">
            <devdoc> Class of variables for the Tds connection.
            </devdoc>
        </member>
        <member name="M:System.Data.SqlClient.TdsParser.IsValidTdsToken(System.Byte)">
            <summary>
            Checks if the given token is a valid TDS token
            </summary>
            <param name="token">Token to check</param>
            <returns>True if the token is a valid TDS token, otherwise false</returns>
        </member>
        <member name="M:System.Data.SqlClient.TdsParser.TrySkipValue(System.Data.SqlClient.SqlMetaDataPriv,System.Int32,System.Data.SqlClient.TdsParserStateObject)">
            <summary>
            This method skips bytes of a single column value from the media. It supports NBCROW and handles all types of values, including PLP and long
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.NullBitmap.IsGuaranteedNull(System.Int32)">
            <summary>
            If this method returns true, the value is guaranteed to be null. This is not true vice versa: 
            if the bitmat value is false (if this method returns false), the value can be either null or non-null - no guarantee in this case.
            To determine whether it is null or not, read it from the TDS (per NBCROW design spec, for IMAGE/TEXT/NTEXT columns server might send
            bitmap = 0, when the actual value is null).
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.IsConnectionAlive(System.Boolean)">
            <summary>
            Checks to see if the underlying connection is still alive
            NOTE: This is not safe to do on a connection that is currently in use
            NOTE: This will mark the connection as broken if it is found to be dead
            </summary>
            <param name="throwOnException">If true then an exception will be thrown if the connection is found to be dead, otherwise no exception will be thrown</param>
            <returns>True if the connection is still alive, otherwise false</returns>
        </member>
        <member name="P:System.Data.SqlClient.TdsParserStateObject.HasErrorOrWarning">
            <summary>
            True if there is at least one error or warning (not counting the pre-attention errors\warnings)
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.AddError(System.Data.SqlClient.SqlError)">
            <summary>
            Adds an error to the error collection
            </summary>
            <param name="error"></param>
        </member>
        <member name="P:System.Data.SqlClient.TdsParserStateObject.ErrorCount">
            <summary>
            Gets the number of errors currently in the error collection
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.AddWarning(System.Data.SqlClient.SqlError)">
            <summary>
            Adds an warning to the warning collection
            </summary>
            <param name="error"></param>
        </member>
        <member name="P:System.Data.SqlClient.TdsParserStateObject.WarningCount">
            <summary>
            Gets the number of warnings currently in the warning collection
            </summary>
        </member>
        <member name="P:System.Data.SqlClient.TdsParserStateObject.PreAttentionErrorCount">
            <summary>
            Gets the number of errors currently in the pre-attention error collection
            </summary>
        </member>
        <member name="P:System.Data.SqlClient.TdsParserStateObject.PreAttentionWarningCount">
            <summary>
            Gets the number of errors currently in the pre-attention warning collection
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.GetFullErrorAndWarningCollection(System.Boolean@)">
            <summary>
            Gets the full list of errors and warnings (including the pre-attention ones), then wipes all error and warning lists
            </summary>
            <param name="broken">If true, the connection should be broken</param>
            <returns>An array containing all of the errors and warnings</returns>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.StoreErrorAndWarningForAttention">
            <summary>
            Stores away current errors and warnings so that an attention can be processed
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.RestoreErrorAndWarningAfterAttention">
            <summary>
            Restores errors and warnings that were stored in order to process an attention
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.CheckThrowSNIException">
            <summary>
            Checks if an error is stored in _error and, if so, throws an error
            </summary>
        </member>
        <member name="M:System.Data.SqlClient.TdsParserStateObject.AssertStateIsClean">
            <summary>
            Debug Only: Ensures that the TdsParserStateObject has no lingering state and can safely be re-used
            </summary>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlBinary'/> class with a binary object to be stored.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[],System.Boolean)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlBinary'/> class with a binary object to be stored.  This constructor will not copy the value.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlBinary.IsNull">
            <devdoc>
               <para>
                  Gets whether or not <see cref='P:System.Data.SqlTypes.SqlBinary.Value'/> is null.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlBinary.Value">
            <devdoc>
               <para>
                  Gets
                  or sets the
                  value of the SQL binary object retrieved.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlBinary.Length">
            <devdoc>
               <para>
                  Gets the length in bytes of <see cref='P:System.Data.SqlTypes.SqlBinary.Value'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])~System.Data.SqlTypes.SqlBinary">
            <devdoc>
               <para>
                  Converts a binary object to a <see cref='T:System.Data.SqlTypes.SqlBinary'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Byte[]">
            <devdoc>
               <para>
                  Converts a <see cref='T:System.Data.SqlTypes.SqlBinary'/> to a binary object.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.ToString">
            <devdoc>
               <para>
                  Returns a string describing a <see cref='T:System.Data.SqlTypes.SqlBinary'/> object.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
            <devdoc>
               <para>
                  Adds two instances of <see cref='T:System.Data.SqlTypes.SqlBinary'/> together.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlBinary">
            <devdoc>
               <para>
                  Converts a <see cref='T:System.Data.SqlTypes.SqlGuid'/> to a <see cref='T:System.Data.SqlTypes.SqlBinary'/>
                  .
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
            <devdoc>
               <para>
                  Compares two instances of <see cref='T:System.Data.SqlTypes.SqlBinary'/> for
                  equality.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
            <devdoc>
               <para>
                  Compares two instances of <see cref='T:System.Data.SqlTypes.SqlBinary'/>
                  for equality.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
            <devdoc>
               <para>
                  Compares the first <see cref='T:System.Data.SqlTypes.SqlBinary'/> for being less than the
                  second <see cref='T:System.Data.SqlTypes.SqlBinary'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
            <devdoc>
               <para>
                  Compares the first <see cref='T:System.Data.SqlTypes.SqlBinary'/> for being greater than the second <see cref='T:System.Data.SqlTypes.SqlBinary'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
            <devdoc>
               <para>
                  Compares the first <see cref='T:System.Data.SqlTypes.SqlBinary'/> for being less than or equal to the second <see cref='T:System.Data.SqlTypes.SqlBinary'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)">
            <devdoc>
               <para>
                  Compares the first <see cref='T:System.Data.SqlTypes.SqlBinary'/> for being greater than or equal the second <see cref='T:System.Data.SqlTypes.SqlBinary'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBinary.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlBinary.Null">
            <devdoc>
               <para>
                  Represents a null value that can be assigned to
                  the <see cref='P:System.Data.SqlTypes.SqlBinary.Value'/> property of an
                  instance of the <see cref='T:System.Data.SqlTypes.SqlBinary'/> class.
               </para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>
                  Represents an integer value that is either 1 or 0.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Boolean)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlBoolean'/> class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.#ctor(System.Int32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlBoolean.IsNull">
            <devdoc>
               <para>
                  Gets whether the current <see cref='P:System.Data.SqlTypes.SqlBoolean.Value'/> is <see cref='F:System.Data.SqlTypes.SqlBoolean.Null'/>.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlBoolean.Value">
            <devdoc>
               <para>
                  Gets or sets the <see cref='T:System.Data.SqlTypes.SqlBoolean'/> to be <see langword='true'/> or
               <see langword='false'/>.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlBoolean.IsTrue">
            <devdoc>
               <para>
                  Gets whether the current <see cref='P:System.Data.SqlTypes.SqlBoolean.Value'/> is <see cref='F:System.Data.SqlTypes.SqlBoolean.True'/>.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlBoolean.IsFalse">
            <devdoc>
               <para>
                  Gets whether the current <see cref='P:System.Data.SqlTypes.SqlBoolean.Value'/> is <see cref='F:System.Data.SqlTypes.SqlBoolean.False'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Implicit(System.Boolean)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>
                  Converts a boolean to a <see cref='T:System.Data.SqlTypes.SqlBoolean'/>.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Boolean">
            <devdoc>
               <para>
                  Converts a <see cref='T:System.Data.SqlTypes.SqlBoolean'/>
                  to a boolean.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_LogicalNot(System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>
                  Performs a NOT operation on a <see cref='T:System.Data.SqlTypes.SqlBoolean'/>
                  .
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_True(System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_False(System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>
                  Performs a bitwise AND operation on two instances of
               <see cref='T:System.Data.SqlTypes.SqlBoolean'/>
               .
            </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_BitwiseOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>
                  Performs
                  a bitwise OR operation on two instances of a
               <see cref='T:System.Data.SqlTypes.SqlBoolean'/>
               .
            </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlBoolean.ByteValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_OnesComplement(System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_ExclusiveOr(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlBoolean">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Equality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_Inequality(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThan(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_LessThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlBoolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlBoolean.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlBoolean.True">
            <devdoc>
               <para>
                  Represents a true value that can be assigned to the
               <see cref='P:System.Data.SqlTypes.SqlBoolean.Value'/> property of an instance of
                  the <see cref='T:System.Data.SqlTypes.SqlBoolean'/> class.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlBoolean.False">
            <devdoc>
               <para>
                  Represents a false value that can be assigned to the
               <see cref='P:System.Data.SqlTypes.SqlBoolean.Value'/> property of an instance of
                  the <see cref='T:System.Data.SqlTypes.SqlBoolean'/> class.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlBoolean.Null">
            <devdoc>
               <para>
                  Represents a null value that can be assigned to the <see cref='P:System.Data.SqlTypes.SqlBoolean.Value'/> property of an instance of
                  the <see cref='T:System.Data.SqlTypes.SqlBoolean'/> class.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlBoolean.Zero">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlBoolean.One">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>
                  Represents an 8-bit unsigned integer to be stored in
                  or retrieved from a database.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.#ctor(System.Byte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlByte.IsNull">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlByte.Value">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Implicit(System.Byte)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Byte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_OnesComplement(System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Addition(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Subtraction(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Multiply(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Division(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Modulus(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseAnd(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_BitwiseOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_ExclusiveOr(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlByte">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Equality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_Inequality(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_LessThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThan(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_LessThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlByte,System.Data.SqlTypes.SqlByte)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlByte.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlByte.Null">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlByte.Zero">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlByte.MinValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlByte.MaxValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlDateTime">
            <devdoc>
               <para>
                  Represents the date and time data ranging in value
                  from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds
                  to be stored in or retrieved from a database.
               </para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>
                  Represents a fixed precision and scale numeric value between -10<superscript term='38'/>
                  -1 and 10<superscript term='38'/> -1 to be stored in or retrieved from a database.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDecimal.MaxPrecision">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDecimal.MaxScale">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Decimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Int64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32[])">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Byte,System.Byte,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.#ctor(System.Double)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDecimal.IsNull">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDecimal.Value">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDecimal.IsPositive">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDecimal.Precision">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDecimal.Scale">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDecimal.Data">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDecimal.BinData">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.ToDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Decimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_UnaryNegation(System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Addition(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Subtraction(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Multiply(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Division(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.AdjustScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Boolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.ConvertToPrecScale(System.Data.SqlTypes.SqlDecimal,System.Int32,System.Int32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Equality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_Inequality(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThan(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_LessThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDecimal,System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Abs(System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Ceiling(System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Floor(System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Sign(System.Data.SqlTypes.SqlDecimal)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Round(System.Data.SqlTypes.SqlDecimal,System.Int32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Truncate(System.Data.SqlTypes.SqlDecimal,System.Int32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Power(System.Data.SqlTypes.SqlDecimal,System.Double)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDecimal.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDecimal.Null">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDecimal.MinValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDecimal.MaxValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>
                  Represents a floating-point number within the range of
                  -1.79E
                  +308 through 1.79E +308 to be stored in or retrieved from
                  a database.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.#ctor(System.Double)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDouble.IsNull">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlDouble.Value">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Double)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Double">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_UnaryNegation(System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Addition(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Subtraction(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Multiply(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Division(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Equality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_Inequality(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThan(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_LessThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlDouble.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDouble.Null">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDouble.Zero">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDouble.MinValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlDouble.MaxValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlGuid">
            <devdoc>
               <para>
                  Represents a globally unique identifier to be stored in
                  or retrieved from a database.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[])">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Byte[],System.Boolean)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.#ctor(System.Guid)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlGuid.IsNull">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlGuid.Value">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_Implicit(System.Guid)~System.Data.SqlTypes.SqlGuid">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Guid">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.ToByteArray">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlGuid">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_Explicit(System.Data.SqlTypes.SqlBinary)~System.Data.SqlTypes.SqlGuid">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_Equality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_Inequality(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThan(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_LessThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlGuid,System.Data.SqlTypes.SqlGuid)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlGuid.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlGuid.Null">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>
                  Represents a 16-bit signed integer to be stored in
                  or retrieved from a database.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.#ctor(System.Int16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlInt16.IsNull">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlInt16.Value">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Int16)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Int16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_UnaryNegation(System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_OnesComplement(System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Addition(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Subtraction(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Multiply(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Division(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Modulus(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseAnd(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_BitwiseOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_ExclusiveOr(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt16">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Equality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_Inequality(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThan(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt16,System.Data.SqlTypes.SqlInt16)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt16.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt16.Null">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt16.Zero">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt16.MinValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt16.MaxValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>
                  Represents a 32-bit signed integer to be stored in
                  or retrieved from a database.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.#ctor(System.Int32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlInt32.IsNull">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlInt32.Value">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Int32)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Int32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_UnaryNegation(System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_OnesComplement(System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Addition(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Subtraction(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Multiply(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Division(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Modulus(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseAnd(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_BitwiseOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_ExclusiveOr(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Equality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_Inequality(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThan(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt32.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt32.Null">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt32.Zero">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt32.MinValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt32.MaxValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>
                  Represents a 64-bit signed integer to be stored in
                  or retrieved from a database.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.#ctor(System.Int64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlInt64.IsNull">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlInt64.Value">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Int64)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Int64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_UnaryNegation(System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_OnesComplement(System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Addition(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Subtraction(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Multiply(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Division(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Modulus(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseAnd(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_BitwiseOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_ExclusiveOr(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Equality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_Inequality(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThan(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_LessThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlInt64.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt64.Null">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt64.Zero">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt64.MinValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlInt64.MaxValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>
                  Represents a currency value ranging from
                  -2<superscript term='63'/> (or -922,337,203,685,477.5808) to 2<superscript term='63'/> -1 (or
                  +922,337,203,685,477.5807) with an accuracy to
                  a ten-thousandth of currency unit to be stored in or retrieved from a
                  database.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int32)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlMoney'/> class with the value given.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Int64)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlMoney'/> class with the value given.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Decimal)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlMoney'/> class with the value given.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.#ctor(System.Double)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlMoney'/> class with the value given.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlMoney.IsNull">
            <devdoc>
               <para>
                  Gets a value indicating whether the <see cref='P:System.Data.SqlTypes.SqlMoney.Value'/>
                  property is assigned to null.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlMoney.Value">
            <devdoc>
               <para>
                  Gets or sets the monetary value of an instance of the <see cref='T:System.Data.SqlTypes.SqlMoney'/>
                  class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.ToDecimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.ToInt64">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.ToInt32">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.ToDouble">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Decimal)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Decimal">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_UnaryNegation(System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Addition(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Subtraction(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Multiply(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Division(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlMoney">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Equality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_Inequality(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThan(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_LessThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlMoney,System.Data.SqlTypes.SqlMoney)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlMoney.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlMoney.Null">
            <devdoc>
               <para>
                  Represents a null value that can be assigned to
                  the <see cref='P:System.Data.SqlTypes.SqlMoney.Value'/> property of an instance of
                  the <see cref='T:System.Data.SqlTypes.SqlMoney'/>class.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlMoney.Zero">
            <devdoc>
               <para>
                  Represents the zero value that can be assigned to the <see cref='P:System.Data.SqlTypes.SqlMoney.Value'/> property of an instance of
                  the <see cref='T:System.Data.SqlTypes.SqlMoney'/> class.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlMoney.MinValue">
            <devdoc>
               <para>
                  Represents the minimum value that can be assigned
                  to <see cref='P:System.Data.SqlTypes.SqlMoney.Value'/> property of an instance of
                  the <see cref='T:System.Data.SqlTypes.SqlMoney'/>
                  class.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlMoney.MaxValue">
            <devdoc>
               <para>
                  Represents the maximum value that can be assigned to
                  the <see cref='P:System.Data.SqlTypes.SqlMoney.Value'/> property of an instance of
                  the <see cref='T:System.Data.SqlTypes.SqlMoney'/>
                  class.
               </para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>
                  Represents a floating point number within the range of -3.40E +38 through
                  3.40E +38 to be stored in or retrieved from a database.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Single)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.#ctor(System.Double)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlSingle.IsNull">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlSingle.Value">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Single">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.ToString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.Parse(System.String)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString)~System.Data.SqlTypes.SqlSingle">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlSingle.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlSingle.Null">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlSingle.Zero">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlSingle.MinValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlSingle.MaxValue">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="T:System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>
                  Represents a variable-length stream of characters to be stored in or retrieved from the database.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlString.Null">
            <devdoc>
               <para>
                  Represents a null value that can be assigned to the <see cref='P:System.Data.SqlTypes.SqlString.Value'/> property of an instance of
                  the <see cref='T:System.Data.SqlTypes.SqlString'/> class.
               </para>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlString.IgnoreCase">
            <devdoc>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlString.IgnoreWidth">
            <devdoc>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlString.IgnoreNonSpace">
            <devdoc>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlString.IgnoreKanaType">
            <devdoc>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlString.BinarySort">
            <devdoc>
            </devdoc>
        </member>
        <member name="F:System.Data.SqlTypes.SqlString.BinarySort2">
            <devdoc>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlString'/> class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Boolean)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlString'/> class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[],System.Int32,System.Int32)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlString'/> class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.Int32,System.Data.SqlTypes.SqlCompareOptions,System.Byte[])">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlString'/> class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32,System.Data.SqlTypes.SqlCompareOptions)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlString'/> class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String,System.Int32)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlString'/> class.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.#ctor(System.String)">
            <devdoc>
               <para>
                  Initializes a new instance of the <see cref='T:System.Data.SqlTypes.SqlString'/> class.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlString.IsNull">
            <devdoc>
               <para>
                  Gets whether the <see cref='P:System.Data.SqlTypes.SqlString.Value'/> of the <see cref='T:System.Data.SqlTypes.SqlString'/> is <see cref='F:System.Data.SqlTypes.SqlString.Null'/>.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlString.Value">
            <devdoc>
               <para>
                  Gets the string that is to be stored.
               </para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlString.LCID">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlString.CultureInfo">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlString.CompareInfo">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="P:System.Data.SqlTypes.SqlString.SqlCompareOptions">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Implicit(System.String)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlString)~System.String">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.ToString">
            <devdoc>
               <para>
                  Converts a <see cref='T:System.Data.SqlTypes.SqlString'/> object to a string.
               </para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.GetUnicodeBytes">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.GetNonUnicodeBytes">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Addition(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlBoolean)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlByte)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt16)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt32)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlInt64)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlSingle)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDouble)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDecimal)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlMoney)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlDateTime)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Explicit(System.Data.SqlTypes.SqlGuid)~System.Data.SqlTypes.SqlString">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.Clone">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Equality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_Inequality(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_LessThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThan(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_LessThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.CompareTo(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.Equals(System.Object)">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.SqlString.GetHashCode">
            <devdoc>
               <para>[To be supplied.]</para>
            </devdoc>
        </member>
        <member name="M:System.Data.SqlTypes.UnsafeNativeMethods.SafeGetFullPathName(System.String)">
            <summary>
            safe wrapper for GetFullPathName
            check that the path length is less than Int16.MaxValue before calling this API!
            </summary>
        </member>
        <member name="T:System.ComponentModel.AttributeCollection">
            <summary>
            Represents a collection of attributes.
            </summary>
        </member>
        <member name="F:System.ComponentModel.AttributeCollection.Empty">
            <summary>
            Specifies an empty collection that you can use, rather than creating a new one. This field is read-only.
            </summary>
        </member>
        <member name="P:System.ComponentModel.AttributeCollection.Attributes">
            <summary>
            Gets the attribute collection.
            </summary>
            
            <returns>
            The attribute collection.
            </returns>
        </member>
        <member name="P:System.ComponentModel.AttributeCollection.Count">
            <summary>
            Gets the number of attributes.
            </summary>
            
            <returns>
            The number of attributes.
            </returns>
        </member>
        <member name="M:System.ComponentModel.AttributeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.AttributeCollection.GetEnumerator">
            <summary>
            Gets an enumerator for this collection.
            </summary>
            
            <returns>
            An enumerator of type <see cref="T:System.Collections.IEnumerator"/>.
            </returns>
        </member>
        <member name="T:System.ComponentModel.BrowsableAttribute">
            <summary>
            Specifies whether a property or event should be displayed in a Properties window.
            </summary>
        </member>
        <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
            <summary>
            Specifies that a property or event can be modified at design time. This static field is read-only.
            </summary>
        </member>
        <member name="F:System.ComponentModel.BrowsableAttribute.No">
            <summary>
            Specifies that a property or event cannot be modified at design time. This static field is read-only.
            </summary>
        </member>
        <member name="F:System.ComponentModel.BrowsableAttribute.Default">
            <summary>
            Specifies the default value for the <see cref="T:System.ComponentModel.BrowsableAttribute"/>, which is <see cref="F:System.ComponentModel.BrowsableAttribute.Yes"/>. This static field is read-only.
            </summary>
        </member>
        <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
            <summary>
            Gets a value indicating whether an object is browsable.
            </summary>
            
            <returns>
            true if the object is browsable; otherwise, false.
            </returns>
        </member>
        <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="T:System.ComponentModel.CollectionChangeAction">
            <summary>
            Specifies how the collection is changed.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:System.ComponentModel.CollectionChangeEventArgs" -->
        <member name="P:System.ComponentModel.CollectionChangeEventArgs.Action">
            <summary>
            Gets an action that specifies how the collection changed.
            </summary>
            
            <returns>
            One of the <see cref="T:System.ComponentModel.CollectionChangeAction"/> values.
            </returns>
        </member>
        <member name="P:System.ComponentModel.CollectionChangeEventArgs.Element">
            <summary>
            Gets the instance of the collection with the change.
            </summary>
            
            <returns>
            An <see cref="T:System.Object"/> that represents the instance of the collection with the change, or null if you refresh the collection.
            </returns>
        </member>
        <member name="T:System.ComponentModel.CollectionChangeEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:System.Data.DataColumnCollection.CollectionChanged"/> event raised when adding elements to or removing elements from a collection.
            </summary>
            <param name="sender">The source of the event. </param><param name="e">A <see cref="T:System.ComponentModel.CollectionChangeEventArgs"/> that contains the event data. </param>
        </member>
        <member name="T:System.ComponentModel.DefaultEventAttribute">
            <summary>
            Specifies the default event for a component.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DefaultEventAttribute.Default">
            <summary>
            Specifies the default value for the <see cref="T:System.ComponentModel.DefaultEventAttribute"/>, which is null. This static field is read-only.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DefaultEventAttribute.Name">
            <summary>
            Gets the name of the default event for the component this attribute is bound to.
            </summary>
            
            <returns>
            The name of the default event for the component this attribute is bound to. The default value is null.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DefaultEventAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="T:System.ComponentModel.DefaultPropertyAttribute">
            <summary>
            Specifies the default property for a component.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DefaultPropertyAttribute.Default">
            <summary>
            Specifies the default value for the <see cref="T:System.ComponentModel.DefaultPropertyAttribute"/>, which is null. This static field is read-only.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DefaultPropertyAttribute.Name">
            <summary>
            Gets the name of the default property for the component this attribute is bound to.
            </summary>
            
            <returns>
            The name of the default property for the component this attribute is bound to. The default value is null.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DefaultPropertyAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="T:System.ComponentModel.DesignerSerializationVisibility">
            <summary>
            Specifies the visibility a property has to the design-time serializer.
            </summary>
        </member>
        <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
            <summary>
            Specifies the type of persistence to use when serializing a property on a component at design time.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
            <summary>
            Specifies that a serializer should serialize the contents of the property, rather than the property itself. This field is read-only.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
            <summary>
            Specifies that a serializer should not serialize the value of the property. This static field is read-only.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
            <summary>
            Specifies that a serializer should be allowed to serialize the value of the property. This static field is read-only.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
            <summary>
            Specifies the default value, which is <see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/>, that is, a visual designer uses default rules to generate the value of a property. This static field is read-only.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
            <summary>
            Gets a value indicating the basic serialization mode a serializer should use when determining whether and how to persist the value of a property.
            </summary>
            
            <returns>
            One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility"/> values. The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible"/>.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute"/> class using the specified <see cref="T:System.ComponentModel.DesignerSerializationVisibility"/> value.
            </summary>
            <param name="visibility">One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility"/> values. </param>
        </member>
        <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="T:System.ComponentModel.DisplayNameAttribute">
            <summary>
            Specifies the display name for a property, event, or public void method which takes no arguments.
            </summary>
        </member>
        <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
            <summary>
            Specifies the default value for the <see cref="T:System.ComponentModel.DisplayNameAttribute"/>. This field is read-only.
            </summary>
        </member>
        <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
            <summary>
            Gets the display name for a property, event, or public void method that takes no arguments stored in this attribute.
            </summary>
            
            <returns>
            The display name.
            </returns>
        </member>
        <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
            <summary>
            Gets or sets the display name.
            </summary>
            
            <returns>
            The display name.
            </returns>
        </member>
        <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.DisplayNameAttribute"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            
            <returns>
            A hash code for the current <see cref="T:System.ComponentModel.DisplayNameAttribute"/>.
            </returns>
        </member>
        <member name="T:System.ComponentModel.EventHandlerList">
            <summary>
            Provides a simple list of delegates. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:System.ComponentModel.EventHandlerList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.EventHandlerList"/> class.
            </summary>
        </member>
        <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
            <summary>
            Adds a list of delegates to the current list.
            </summary>
            <param name="listToAddFrom">The list to add.</param>
        </member>
        <member name="M:System.ComponentModel.EventHandlerList.Dispose">
            <summary>
            Disposes the delegate list.
            </summary>
        </member>
        <member name="T:System.ComponentModel.ListSortDirection">
            <summary>
            Specifies the direction of a sort operation.
            </summary>
        </member>
        <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
            <summary>
            Indicates that the property grid should refresh when the associated property value changes. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
            <summary>
            Indicates that all properties are queried again and refreshed if the property value is changed. This field is read-only.
            </summary>
        </member>
        <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
            <summary>
            Indicates that all properties are repainted if the property value is changed. This field is read-only.
            </summary>
        </member>
        <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
            <summary>
            Indicates that no other properties are refreshed if the property value is changed. This field is read-only.
            </summary>
        </member>
        <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
            <summary>
            Gets the refresh properties for the member.
            </summary>
            
            <returns>
            A <see cref="T:System.ComponentModel.RefreshProperties"/> that indicates the current refresh properties for the member.
            </returns>
        </member>
        <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.RefreshPropertiesAttribute"/> class.
            </summary>
            <param name="refresh">A <see cref="T:System.ComponentModel.RefreshProperties"/> value indicating the nature of the refresh.</param>
        </member>
        <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
            <summary>
            Returns the hash code for this object.
            </summary>
            
            <returns>
            The hash code for the object that the attribute belongs to.
            </returns>
        </member>
        <member name="T:System.ComponentModel.ToolboxItemAttribute">
            <summary>
            Represents an attribute of a toolbox item.
            </summary>
        </member>
        <member name="F:System.ComponentModel.ToolboxItemAttribute.Default">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.ToolboxItemAttribute"/> class and sets the type to the default, <see cref="T:System.Drawing.Design.ToolboxItem"/>. This field is read-only.
            </summary>
        </member>
        <member name="F:System.ComponentModel.ToolboxItemAttribute.None">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.ToolboxItemAttribute"/> class and sets the type to null. This field is read-only.
            </summary>
        </member>
        <member name="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemType">
            <summary>
            Gets or sets the type of the toolbox item.
            </summary>
            
            <returns>
            The type of the toolbox item.
            </returns>
            <exception cref="T:System.ArgumentException">The type cannot be found. </exception><PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/></PermissionSet>
        </member>
        <member name="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemTypeName">
            <summary>
            Gets or sets the name of the type of the current <see cref="T:System.Drawing.Design.ToolboxItem"/>.
            </summary>
            
            <returns>
            The fully qualified type name of the current toolbox item.
            </returns>
        </member>
        <member name="T:System.ComponentModel.Win32Exception">
            <summary>
            Throws an exception for a Win32 error code.
            </summary>
        </member>
        <member name="P:System.ComponentModel.Win32Exception.NativeErrorCode">
            <summary>
            Gets the Win32 error code associated with this exception.
            </summary>
            
            <returns>
            The Win32 error code associated with this exception.
            </returns>
        </member>
        <member name="M:System.ComponentModel.Win32Exception.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.ComponentModel.Win32Exception"/> class with the last Win32 error that occurred.
            </summary>
        </member>
        <member name="T:System.Security.Permissions.PermissionState">
            <summary>
            Specifies whether a permission should have all or no access to resources at creation.
            </summary>
        </member>
    </members>
</doc>
